<?php
/*
* генерирует jqgrid
* на входе:
* $options - опции из сооттветсвующей секции конфига
* $interface -  это имя глобальное имя интерфейса глобального
*/
use Zend\Json\Json;

Json::$useBuiltinEncoderDecoder = !function_exists("json_encode");

$options=$this->options;

//\Zend\Debug\Debug::dump($options["layout"]["colModel"]);
//удалим всю информацию о плагинах, она не нужна
foreach ($options["layout"]["colModel"] as $k=>$v){
    unset($options["layout"]["colModel"][$k]["plugins"]);
}


$options["layout"]["datatype"]="json";
$options["layout"]["mtype"]="GET";
$options["layout"]["url"]=$this->url("adm/io-jqgrid",
                           [
                               "interface"=>$interface,
                               "action" => "readjqgrid"
                           ]
                           );

$options["layout"]["editurl"]=$this->url("adm/io-jqgrid",
                           [
                               "interface"=>$interface,
                               "action" => "editjqgrid"
                           ]
                           );

$options["layout"]["pager"]="#".$options["container"]."_pager";

/*опции навигации*/
$navgrid_options=$options["layout"]["navgrid"];
unset($options["layout"]["navgrid"]);

/*все опции в грид*/
$jqgrid= json::encode($options["layout"], false, ['enableJsonExprFinder' => true]);


if (isset($options["caption"])){
    echo $options["caption"];
}
?>
<table id="<?=$options["container"]?>"></table> 
<div id="<?=$options["container"]?>_pager"></div>

<script type="text/javascript">
$(function () {
"use strict";
var jqgrid_options=<?=$jqgrid?>,
    navgrid_button_options=<?=json::encode($navgrid_options["button"],true)?>;
jqgrid_options.dataProxy=$.jgrid.ext.ajaxFormProxy;
jqgrid_options.useDataProxy=true;


$("#<?=$options["container"]?>").jqGrid(jqgrid_options);
$("#<?=$options["container"]?>").navGrid('#<?=$options["container"]?>_pager', navgrid_button_options, /*кнопки в панели*/
              {width:"auto",closeOnEscape:true,closeAfterEdit: true, recreateForm: true,useDataProxy: true,
              
               onInitializeForm : function(formid){
                    $(formid).attr('method','POST');
                    $(formid).attr('action','');
                    $(formid).attr('enctype','multipart/form-data');
                }
              }, //опции в окно при редактировании edit
               {width:"auto",closeOnEscape:true,closeAfterAdd: true, recreateForm: true,useDataProxy: true,
            
               onInitializeForm : function(formid){
                    $(formid).attr('method','POST');
                    $(formid).attr('action','');
                    $(formid).attr('enctype','multipart/form-data');
                }}, // опции в окно при добавлении add
               {closeOnEscape:true},  // delete instead that del:false we need this
               {multipleSearch : true}, //можно добавлять условия
               {closeOnEscape:true,width:"auto"}); //опции при просмотре записи в окошке
var lastSelection;
function editRow(id) {
    if (id && id !== lastSelection) {
        var grid = $("#<?=$options["container"]?>");
        grid.jqGrid('restoreRow',lastSelection);
        grid.jqGrid('editRow',id, {
            keys: true,
            onEnter : function(rowid, options, event) {
                if (confirm("Save the row with ID: "+rowid) === true) {
                    $(this).jqGrid("saveRow", rowid, options );
                }
            }
        });
        lastSelection = id;
    }
}

$('#<?=$options["container"]?>').jqGrid('inlineNav','#<?=$options["container"]?>_pager',
                                        {"editParams":{"editRowParams":
                                                       {"beforeSaveRow":function( options, rowId ){console.log(rowId);}}
                                                      }
                                        });

});

</script>
<?php
if (isset($options["podval"])){
    echo $options["podval"];
}

?>
