<?php
/*
* генерирует jqgrid
* на входе:
* $options - опции из соответсвующей секции конфига
* $interface -  это имя глобальное имя интерфейса
* $toolbarForm - форма Zend для вывода в области toolbar или null
*/
use Zend\Json\Json;

Json::$useBuiltinEncoderDecoder = !function_exists("json_encode");

$options=$this->options;
$get="";
$gets=[];
if (isset($_GET)){
    $get="?".http_build_query($_GET);
     $gets=$_GET;
}


//удалим всю информацию о плагинах, она не нужна
foreach ($options["layout"]["colModel"] as $k=>$v){
    unset($options["layout"]["colModel"][$k]["plugins"]);
}

unset($options["layout"]["toolbarModel"]);
//средство для добавления пользовательских кнопок в панель сетки
if (!isset($options["layout"]["navButtonAdd"])){
    $navButtonAdd=[];
} else {
    $navButtonAdd=$options["layout"]["navButtonAdd"];
    //удалим, что бы не передавать в сетку не нужную информацию
    unset ($options["layout"]["navButtonAdd"]);
}


$options["layout"]["datatype"]="json";
$options["layout"]["mtype"]="GET";
$options["layout"]["url"]=$this->url("adm/io-jqgrid",
                           [
                               "interface"=>$interface,
                               "action" => "readjqgrid"
                           ]
                           ).$get;

$options["layout"]["editurl"]=$this->url("adm/io-jqgrid",
                           [
                               "interface"=>$interface,
                               "action" => "editjqgrid"
                           ]
                           ).$get;

$options["layout"]["pager"]="#".$options["container"]."_pager";

/*опции навигации*/
$navgrid_options=$options["layout"]["navgrid"];
unset($options["layout"]["navgrid"]);
if (!isset($navgrid_options["delOptions"])){
    $navgrid_options["delOptions"]=[];
}
if (!isset($navgrid_options["addOptions"])){
    $navgrid_options["addOptions"]=[];
}
if (!isset($navgrid_options["editOptions"])){
    $navgrid_options["editOptions"]=[];
}
if (!isset($navgrid_options["viewOptions"])){
    $navgrid_options["viewOptions"]=[];
}
if (!isset($navgrid_options["searchOptions"])){
    $navgrid_options["searchOptions"]=[];
}
if (!isset($navgrid_options["button"])){
    $navgrid_options["button"]=[];
}


if (isset($options["caption"])){
    echo $options["caption"];
}

//это toobar в начале
$postData=[];
if ($toolbarForm){
    $form = $toolbarForm;
    $form->setAttribute('action',"#");
    $form->setAttribute("id","toolbar_zform");
    $form->prepare();
    $formLabel = $this->plugin('formLabel');
    $toobar=$this->form()->openTag($form);
    $toobar.='<table class="py-2 jqgrid_toolbar">';
    foreach ($form as $k=>$item){
        $i=$form->get($k);
        $type=$item->getAttribute("type");
        
        $postData[$k]=$i->getValue();
            switch ($type){
                case "select":{
                    $toobar.='<tr><td>'.$this->formLabel($i).'</td><td>';
                    $toobar.= $this->FormSelect($i);
                    break;
                }
                case "multi_checkbox":{
                    $m=$this->FormMultiCheckbox();
                    $m->setSeparator("<br/>");
                    $toobar.='<tr><td>'.$this->formLabel($i).'</td><td>';
                    $toobar.= '<div class="form-check pt-2">'.$m->Render($i).'</div>';
                    break;
                }
                case "button":{
                    $toobar.='<tr><td> </td><td>';
                    $toobar.=  $this->FormButton($i);
                    break;
                }

                default:{
                    $toobar.='<tr><td>'.$this->formLabel($i).'</td><td>';
                    $toobar.= $this->formElement($i);
                }
            }
          $toobar.='</td></tr>';
    }
    $toobar.='</table>';
    //если у нас есть тип select и там указан ajax URL для получения значений в режиме редактирования
    //добавим к URL значения из toolbar, если он есть
    foreach ($options["layout"]["colModel"] as &$colModel){
        if (isset($colModel["editoptions"]["dataUrl"])){
            $colModel["editoptions"]["dataUrl"].="?".http_build_query(array_merge($postData,$_GET));
        }
    }
}


//\Zend\Debug\Debug::dump($options["layout"]["colModel"]);

/*все опции в грид*/
$jqgrid= json::encode($options["layout"], false, ['enableJsonExprFinder' => true]);


?>
<table id="<?=$options["container"]?>"></table> 
<div id="<?=$options["container"]?>_pager"></div>
<div id="dialog_permission" title="Владелец и права доступа"></div>
<script type="text/javascript">
$(function () {
"use strict";
var jqgrid_options=<?=$jqgrid?>,
    navgrid_button_options=<?=json::encode($navgrid_options["button"],true)?>,
    navgrid_edit_options=<?=json::encode($navgrid_options["editOptions"],true)?>,
    navgrid_add_options=<?=json::encode($navgrid_options["addOptions"],true)?>,
    navgrid_del_options=<?=json::encode($navgrid_options["delOptions"],true)?>,
    navgrid_view_options=<?=json::encode($navgrid_options["viewOptions"],true)?>,
    navgrid_search_options=<?=json::encode($navgrid_options["searchOptions"],true)?>;
jqgrid_options.dataProxy=$.jgrid.ext.ajaxFormProxy;
jqgrid_options.useDataProxy=true;
jqgrid_options.pager='#<?=$options["container"]?>_pager';
/*добавляется в POST сетки в момент создания записи из GET запроса открытия сетки*/  
navgrid_add_options.editData=<?=json::encode($gets)?>;

//добавим в пересылаемые данные значения из toolbar полей
//при редактировании сетки, значения этих полей добавляются в прокси запросов к серверу!
<?php
if (!empty($postData)){
    echo 'jqgrid_options.postData='.json::encode($postData).";\n";
}
?>
navgrid_edit_options.useDataProxy=true;
navgrid_edit_options.onInitializeForm =function(formid){$(formid).attr('method','POST');$(formid).attr('action','');$(formid).attr('enctype','multipart/form-data');};
navgrid_add_options.useDataProxy=true;
navgrid_add_options.onInitializeForm =function(formid){$(formid).attr('method','POST');$(formid).attr('action','');$(formid).attr('enctype','multipart/form-data');};

$("#<?=$options["container"]?>").jqGrid(jqgrid_options);
var jqgridnavGrid=$("#<?=$options["container"]?>").navGrid('#<?=$options["container"]?>_pager', navgrid_button_options, /*кнопки в панели*/
            navgrid_edit_options, //опции в окно при редактировании edit
            navgrid_add_options, // опции в окно при добавлении add
            navgrid_del_options,  // delete instead that del:false we need this
            navgrid_search_options, //окно поиска
            navgrid_view_options); //опции при просмотре записи в окошке

<?php
//это toobar в начале
//при редактировании сетки, значения этих полей добавляются в прокси запросов к серверу!
if ($toolbarForm){
    ?>
$("#t_<?=$options["container"]?>").append("<?=$this->EscapeJs($toobar)?>"); 
<?php
}
  //добавляем пользовательские кнопки в панель сетки
  foreach ($navButtonAdd as $navButtonAddItem){
      ?>
jqgridnavGrid.navButtonAdd('#<?=$options["container"]?>_pager',
                {
                    caption:"<?=$this->EscapeHtmlAttr($navButtonAddItem["caption"])?>",
                    buttonicon:"<?=$navButtonAddItem["buttonicon"]?>",
                    onClickButton:<?=$navButtonAddItem["onClickButton"]?>,
                    position: "<?=$navButtonAddItem["position"]?>",
                    title:"<?=$this->EscapeHtmlAttr($navButtonAddItem["title"])?>",
                    id : "<?=$navButtonAddItem["id"]?>",
                    cursor: "<?=$navButtonAddItem["cursor"]?>",
                });
<?php
          if ($options["layout"]["toppager"]){
              //если есть опция toppager, то дублируем в верх
            ?>
jqgridnavGrid.navButtonAdd('#<?=$options["container"]?>_toppager',
                {
                    caption:"<?=$this->EscapeHtmlAttr($navButtonAddItem["caption"])?>",
                    buttonicon:"<?=$navButtonAddItem["buttonicon"]?>",
                    onClickButton:<?=$navButtonAddItem["onClickButton"]?>,
                    position: "<?=$navButtonAddItem["position"]?>",
                    title:"<?=$this->EscapeHtmlAttr($navButtonAddItem["title"])?>",
                    id : "<?=$navButtonAddItem["id"]?>",
                    cursor: "<?=$navButtonAddItem["cursor"]?>",
                });
    <?php
          }
  }
  //доступ, пока отключен
    if ($this->acl("Mf\Catalog\Controller\AdminController/createtovar")->isAllowed("p") && false){
        ?>
    //Добавим кнопку измнения доступа к интерфейсу, если есть доступ
jqgridnavGrid.navButtonAdd('#<?=$options["container"]?>_pager',
                {
                    caption:"",
                    buttonicon:"ui-icon-locked",
                    onClickButton:function(){$("#dialog_permission").dialog("open");},
                    position: "last",
                    title:"Доступ к интерфейсу",
                    id : "",
                    cursor: "pointer"
                });
<?php
    }
if (!empty($options["bind"]) && is_array($options["bind"])){
    foreach ($options["bind"] as $name=>$fn){
?>
    $("#<?=$options["container"]?>").bind("<?=$name?>", <?=$fn?>);
<?php
    }
 }
       ?>

$("#dialog_permission").dialog({
    autoOpen:false,
    modal:true,
    position:{ my: "left top", at: "center top", of:$("#<?=$options["container"]?>") },
    width: "auto",
    buttons: [
            {
              text: "Применить",
            icon: "ui-icon-disk",
              click: function() {
              }
            },
            {
              text: "Отменить",
              icon: "ui-icon-closethick",
              click: function() {
                $( this ).dialog( "close" );
              }
            }
      ],
      open: function(ev, ui){
          //$(this).load("/adm/universal-interface/permissions_item")
          }

});



});
</script>
<?php
if (isset($options["podval"])){
    echo $options["podval"];
}

?>

<script>
/*фиксирование изменений в toolbar и перезагрузка сетки*/
function change_toolbar()
{
    "use strict";
    var postData={},get=document.location.href.split("?");
    $.map($("#toolbar_zform").serializeArray(),function(v){postData[v.name]=v.value;});
    $("#<?=$options["container"]?>").jqGrid('setGridParam',{ postData: postData });
    //пройдем по всем колонкам и поищем dataUrl для выпадающего списка
    //если есть подменим там GET параметры
    var colModel=$("#<?=$options["container"]?>").jqGrid ('getGridParam','colModel');
    $.map(colModel,function(c){
        if (c.editoptions && c.editoptions.dataUrl){
            var ColProp=$("#<?=$options["container"]?>").jqGrid ('getColProp',c.name);
            var u=c.editoptions.dataUrl.split("?");
            ColProp.editoptions.dataUrl=u[0]+"?"+$("#toolbar_zform").serialize()+((get[1]) ? "&"+get[1]: "");
            $("#<?=$options["container"]?>").jqGrid ('setColProp',c.name,ColProp );
        }
    });
    $("#<?=$options["container"]?>").trigger('reloadGrid');
};

    //большой выбор путем autocomplite
        $("#question_tags").tagit({
        removeConfirmation: true,
        allowSpaces: true,
        animate: false,
        tabIndex: 3,
        autocomplete: {
            minLength: 3,
            source: function(request, response) {
                $.ajax({
                    url: "/adm/io-jqgrid",
                    data: {
                        term: request.term
                    },
                    dataType: "json",
                    success: function(data) {
                        response($.map(data, function(item) {
                            return {
                                label: item.display_name,
                                value: item.display_name,
                                ident: item.name,
                                image_url: item.image_url
                            }
                        }))
                    }
                })
            },
            open: function() {
                $(".ui-autocomplete:visible").css({
                    top: "+=15",
                    left: "+=-5"
                })
            },
            create: function(event, ui) {
                $(this).data("ui-autocomplete")._renderItem = function(ul, item) {
                    ul.addClass("autocomplete_tags");
                    var tagImage = "";
                    if (item.image_url) {
                        tagImage = '<img class="icon_suggest icon_tag-img" src="' + item.image_url + '" alt="user avatar" />'
                    } else {
                        tagImage = '<svg class="icon_suggest icon_tag_small" viewBox="0 0 32 32"><use xlink:href="images/sprite_0.1.svg#icon_tag"></use></svg>'
                    }
                    return $("<li class='ui-search-type-tag'>").append("<a>" + tagImage + "<span>" + item.label + "</span>" + "</a>").appendTo(ul)
                }
            }
        }
    });

</script>
