<?php
/*

17.4.15 - изменен алгоритм обработки настроек из ini файлов


Более не поддерживается
удалено все по выбору стилей, упрощено все

*/

use Admin\Lib\Formitem as form_item;
use Admin\Lib\Simba;
use Laminas\Form\Element;

error_reporting(E_ERROR | E_WARNING | E_PARSE);

$GLOBALS["form_item"]=new form_item($this,$this->config);
$dialog_massage="";
$dialog_title="";

/*доступ к Admin\Controller\ConstructorTreeController/index - это контроллер конструктора*/
$acl=$this->acl("Admin\Controller\ConstructorTreeController/index");


if (isset($_POST['tab_constr'])){
    if ($acl->isAllowed("d")){
        simba::query("delete from design_tables_text_interfase where table_type=1 and interface_name='".$_POST['interface_name']."' ");
        simba::query('delete from design_tables where table_type=1 and interface_name="'.$_POST['del_interface'].'"');
    } else {
    $dialog_massage="Ошибка удаления. Доступ запрещен";
    $dialog_title="Ошибка";
    }
}


//создание нового интерфейса
if (isset($_POST['interface_create'])){
    if ($acl->isAllowed("w")){
        if ($_POST['tab_list']!='')	{//создаем новый интерфейс
            simba::replaceRecord (array(
                'row_type'=>0,
                'table_name'=>$_POST['tab_list'],
                'table_type'=>1,
                'interface_name'=>$_POST['new_interface']
                ),'design_tables');
            $_POST['interface_name']=$_POST['new_interface'];//сделать созданный интерфейс текущим
        }
    } else {
        $dialog_massage="Ошибка Создания. Доступ запрещен";
        $dialog_title="Ошибка";
    }

}
    
//удаление выьранного дополн. поля
if (isset($_POST['pole_dop_numb_del_b']) && isset($_POST['id1']) && $_POST['id1']>0) {		//удалить старое значение
    if ($acl->isAllowed("d")){
        simba::query("delete from design_tables_text_interfase where  
		 	(item_name='coment0' or item_name='caption0' or item_name='caption_dop_".$_POST['pole_dop_numb']."') 
					and table_type=1 and interface_name='".$_POST['interface_name']."' ");
        simba::query('delete from design_tables where table_type=1 and  id="'.$_POST['id1'].'"');
    } else {
            $dialog_massage="Ошибка Удаления. Доступ запрещен";
            $dialog_title="Ошибка";
        }

}

//уничтожение одной структыры, что выбрана
if (isset($_POST['del_struct'])){ //надо доработать!!!!!!!!!!!
    if ($acl->isAllowed("d")){
        simba::query ('delete from design_tables where table_type=1 and  interface_name="'.$_POST['interface_name'].'" and col_name="'.$_POST['cols'].'" and row_type="'.$_POST['row_type'].'"');
    } else {
            $dialog_massage="Ошибка Удаления. Доступ запрещен";
            $dialog_title="Ошибка";
        }

}


if (!isset($_POST['row_type'])) $_POST['row_type']=1;

if (isset($_POST['pole_dop_create'])) {
    if ($acl->isAllowed("w")){
        simba::replaceRecord (array('table_name'=>$_POST['interface_tabl_tek'],
														'interface_name'=>$_POST['interface_name'],
														'table_type'=>1,'row_type'=>1),
													'design_tables');
    } else {
        $dialog_massage="Ошибка Создания. Доступ запрещен";
        $dialog_title="Ошибка";
    }
}



if (isset($_POST['save_all'])){
    if ($acl->isAllowed("w")){
        if ($_POST['interface_razdel']==0){
            if ($_POST['interface_tabl_tek']){
                //удалить старое значение
                simba::query("delete from design_tables_text_interfase where table_type=1 
                 and (item_name='coment0' or item_name='caption0') and interface_name='".$_POST['interface_name']."' ");

                //запишем текст интерфейса
                simba::replaceRecord (array('item_name'=>'coment0',
                                        'interface_name'=>$_POST['interface_name'],
                                        'language'=>"ru_RU",
                                        'table_type'=>1,
                                        'text'=>$_POST['coment0']),
                                    'design_tables_text_interfase');
                simba::replaceRecord (array('item_name'=>'caption0',
                                    'interface_name'=>$_POST['interface_name'],
                                    'language'=>"ru_RU",
                                    'table_type'=>1,
                                    'text'=>$_POST['caption0']),
                                'design_tables_text_interfase');
                if (isset($_POST['pole_dop_numb'])) 
                            {

                //удалить старое значение
                simba::query("delete from design_tables_text_interfase where table_type=1 
                 and (item_name='caption_dop_".$_POST['pole_dop_numb']."') and interface_name='".$_POST['interface_name']."' ");

                            simba::replaceRecord (array('item_name'=>'caption_dop_'.$_POST['pole_dop_numb'],
                                            'interface_name'=>$_POST['interface_name'],
                                            'language'=>"ru_RU",
                                            'table_type'=>1,
                                            'text'=>$_POST['caption1']),
                                            'design_tables_text_interfase');		
                            }
            $pole_spisok_sql=implode (",",array($_POST['cols__id'],$_POST['cols__subid'],$_POST['cols__level']));
        //запись всей структуры в базу
                //$row_type=0 это глобальные параметры
                if (empty($_POST["permission"])){
                    $permission=484;
                } else {
                    $permission=$_POST["permission"];
                    $permission=array_sum($_POST["permission"]);
                }

                simba::replaceRecord (
                    array(
                        'id'=>$_POST['id0'],
                        'row_type'=>0,
                        'table_name'=>$_POST['interface_tabl_tek'],
                        'table_type'=>1,
                        'caption_style'=>serialize(["owner_user"=>$_POST["owner_user"],"owner_group"=>$_POST["owner_group"],"permission"=>$permission]),//доступ
                        'pole_prop'=>$pole_spisok_sql,
                        'col_por'=>$_POST['col_por2'],
                        'pole_spisok_sql'=>$_POST['pole_spisok_sql0'],
                        'interface_name'=>$_POST['interface_name'],
                        'default_sql'=>$_POST['del_record'],
                        'col_name'=>implode(",",$_POST['but']),
                        'validator'=>$_POST['cache_tags'],
                        'sort_item_flag'=>$_POST['cache_clear'],
                        'properties'=>$_POST['functions_save_interface'],
                        'functions_befo_out'=>$_POST['functions_load_interface'],
                        'functions_befo_del'=>$_POST['functions_del_interface'],
                        'functions_after'=>$_POST['functions_after_save_interface'],
                        /*ёто список псевдонимов, отличается от линейного интерфейса!*/
                        'pole_global_const'=>$_POST['col_name0'],

                        )
                    ,'design_tables');


                }//конец записи общих параметров
        }

            if ($_POST['interface_razdel']==1)	{//запись дополнительных полей

                $pole_spisok_sql=$_POST['pole_spisok_sql1'];
                if ($_POST['tab_select1']) $pole_spisok_sql='select id,name from '.$_POST['tab_select1'];
                if(!isset($_POST['pole_global_const'])) $_POST['pole_global_const']=NULL;
                if(!isset($_POST['value'])) $_POST['value']=NULL;
                if(!isset($_POST['properties'])) $_POST['properties']=NULL;
        //print_r($_POST);
                simba::replaceRecord (
                    array(
                    'id'=>$_POST['id1'],
                    'row_type'=>1,
                    'table_type'=>1,
                    'table_name'=>$_POST['interface_tabl_tek'],
                    'pole_global_const'=>(is_array($_POST['pole_global_const'])) ? implode (',',$_POST['pole_global_const']) :$_POST['pole_global_const'],
                    'pole_type'=>$_POST['pole_type1'],
                    'pole_style'=>"",//(is_array($_POST['pole_style'])) ? implode(',',$_POST['pole_style']):$_POST['pole_style'],
                    'caption_style'=>"",//$_POST['caption_style1'],
                    'pole_prop'=>(is_array($_POST['pole_prop'])) ? implode(',',$_POST['pole_prop']):$_POST['pole_prop'],
                    'default_sql'=>$_POST['default_sql1'],
                    'pole_spisok_sql'=>$pole_spisok_sql,
                    //properties'=>(is_array($_POST['properties1']))? implode (',',$_POST['properties1']):'',
                    'properties'=>serialize($_POST['properties']),
                    'value'=>$_POST['value'],
                    'interface_name'=>$_POST['interface_name'],
                    'col_por'=>$_POST['col_por1'],
                    'functions_befo_out'=>$_POST['functions_befo_out'],
                    ),'design_tables');


                simba::query("delete from design_tables_text_interfase where item_name='caption_dop_".$_POST['pole_dop_numb']."'
                            and table_type=1 and interface_name='".$_POST['interface_name']."' ");
                //запишем текст интерфейса
                if ($_POST['caption1'])simba::replaceRecord (array('item_name'=>'caption_dop_'.$_POST['pole_dop_numb'],
                                            'table_type'=>1,
                                            'interface_name'=>$_POST['interface_name'],
                                            'language'=>"ru_RU",
                                            'text'=>$_POST['caption1']),
                                    'design_tables_text_interfase');		
                }

        //запись содержимого отбельных элементов
            if ($_POST['interface_razdel']==2)	{
                if (!isset($_POST['pole_global_const'])) $_POST['pole_global_const']=NULL;
                if (!isset($_POST['_selected_validator'])) $_POST['_selected_validator']=NULL;
                if (!isset($_POST['properties'])) $_POST['properties']=NULL;


                $pole_spisok_sql=$_POST['pole_spisok_sql2'];
                if ($_POST['tab_select2']) $pole_spisok_sql='select id,name from '.$_POST['tab_select2'];
                if (!isset($_POST['pole_style'])) $_POST['pole_style']=NULL;
                if (!isset($_POST['pole_name2'])) $_POST['pole_name2']=NULL;
                if (!isset($_POST['pole_prop'])) $_POST['pole_prop']=NULL;
                simba::replaceRecord (
                    array(
                    'id'=>(int)$_POST['id2'],
                    'row_type'=>2,
                    'table_name'=>$_POST['interface_tabl_tek'],
                    'table_type'=>1,
                    'col_name'=>$_POST['cols'],
                    'pole_type'=>$_POST['pole_type2'],
                    'col_por'=>(int)$_POST['col_por'],
                    'pole_style'=>(is_array($_POST['pole_style']))? implode(',',$_POST['pole_style']):$_POST['pole_style'],
                    'pole_spisok_sql'=>$pole_spisok_sql,
                    'col_name'=>$_POST['cols'],
                    'caption_style'=>"",//$_POST['caption_style2'],
                    'pole_name'=>$_POST['pole_name2'],
                    'pole_prop'=>(is_array($_POST['pole_prop']))? implode(',',$_POST['pole_prop']):$_POST['pole_prop'],
                    'pole_global_const'=>(is_array($_POST['pole_global_const'])) ? implode (',',$_POST['pole_global_const']) :$_POST['pole_global_const'],
                    'value'=>$_POST['value2'],
                    'properties'=>serialize($_POST['properties']),
                    'functions_befo_out'=>$_POST['functions_befo_out'],
                    'functions_befo'=>$_POST['functions_befo'],
                    'functions_after'=>$_POST['functions_after'],
                    'functions_befo_del'=>$_POST['functions_befo_del'],
                    'default_sql'=>$_POST['default_sql2'],
                    'interface_name'=>$_POST['interface_name'],
                    'validator'=>serialize($_POST['_selected_validator']),
                    ),'design_tables');

                        //удалить старое значение
                simba::query("delete from design_tables_text_interfase where  item_name='caption_col_".$_POST['cols']."'
                            and table_type=1 and interface_name='".$_POST['interface_name']."' ");


                if ($_POST['caption2'])simba::replaceRecord (array('item_name'=>'caption_col_'.$_POST['cols'],
                                                'interface_name'=>$_POST['interface_name'],
                                                'language'=>"ru_RU",
                                                'table_type'=>1,
                                                'text'=>$_POST['caption2']),
                                        'design_tables_text_interfase');


                //удалить старое значение
                simba::query("delete from design_tables_text_interfase where item_name='values_message_".$_POST['cols']."' and interface_name='".$_POST['interface_tabl_tek']."' and table_type=1");
                //запишем текст интерфейса

                    if (isset($_POST['values_message']) && isset($_POST['cols']))
                                        simba::replaceRecord (array('item_name'=>'values_message_'.$_POST['cols'].$_POST['row_type'],
                                                'interface_name'=>$_POST['interface_name'],
                                                'language'=>"ru_RU",
                                                'table_type'=>1,
                                                'text'=>$_POST['values_message']),
                                        'design_tables_text_interfase');


                } 

    } else {
    $dialog_massage="Ошибка записи. Доступ запрещен";
    $dialog_title="Ошибка";
    }

}



if(isset($_POST['interface_name']))	{
    //загрузим данные из языковой таблицы сопровождения 
    $c=simba::queryAllRecords("select item_name,text from design_tables_text_interfase where 
            table_type=1  and interface_name='".$_POST['interface_name']."'");
    for ($i=0;$i<simba::numRows();$i++){
        $design_tables_text_interfase[$c['item_name'][$i]]=$c['text'][$i];
    }
}



//ролучить список доступных линейных интерфейсов
$interface_sp=simba::queryAllRecords("select distinct(interface_name) as interface_name from design_tables where table_type=1 and row_type=0");
simba::$null_simvol='';
$interface_sp1=simba::getSpValue ($interface_sp['interface_name'],$interface_sp['interface_name'],0);
$interface_sp=simba::getSpValue ($interface_sp['interface_name'],$interface_sp['interface_name'],(isset($_POST['interface_name']))?$_POST['interface_name']:NULL);

//получить список таблиц вооьбще
$tab_all=simba::queryAllRecords ('show tables');
$tab_create_del=simba::getSpValue ($tab_all['Tables_in_'.DBNAME],$tab_all['Tables_in_'.DBNAME],9999);
$tab_list1=simba::getSpValue ($tab_all['Tables_in_'.DBNAME],$tab_all['Tables_in_'.DBNAME],999);//это список таблиц,


$tab_list=simba::getSpValue ($tab_all['Tables_in_'.DBNAME],$tab_all['Tables_in_'.DBNAME],(isset($_POST['interface_tabl_tek']))?$_POST['interface_tabl_tek']:NULL);
//получить отдельно инструкцию создания в зависимости от выбора
if (isset($_POST['interface_tabl_tek']) && $_POST['interface_tabl_tek']>'') {
		$tab=simba::queryOneRecord ('show create table '.$_POST['interface_tabl_tek']);//================$tab используется в HTML коде!!!!!!!!!!!!!!!!!!!!!!!!!!!
		}

$dis='disabled="disabled"';//запрет полей ввода
$dis1='disabled="disabled"';//запрет полей ввода



//считаем текущие настройки и структуру таблицы
//===============настройки для ывсей таблицы row_type==0
$struct0=NULL;
if (isset($_POST['interface_name'])) {
    $struct0=simba::queryOneRecord ('select * from design_tables where table_type=1 and row_type=0 and interface_name="'.$_POST['interface_name'].'"');
}
$but=explode(",",$struct0['col_name']);//флаги наличия 3-х кнопок при заполнении дерева

//===============настройки для row_type==2
$struct2=NULL;
if (isset($_POST['interface_name']) && isset($_POST['cols'])){
    $struct2=simba::queryOneRecord ('select * from design_tables where table_type=1 and row_type=2 and interface_name="'.$_POST['interface_name'].'" and col_name="'.$_POST['cols'].'"');
}
//===============настройки для row_type==1 (доп поле)


if ($struct0['table_name']>'') {
    $cols=simba::queryAllRecords ('show columns from '.$struct0['table_name']);	
    $cols_id['Field']=$cols['Field'];//идентификаторы это и есть имена полей и спевдонимов
    //работаем со спец списком организации дерева
    $c=explode (",",$struct0['pole_prop']); //получить список симен спец полей для организации дерева
    $cols_sp_id=simba::getSpValue ($cols['Field'],$cols_id['Field'],$c[0]);
    $cols_sp_subid=simba::getSpValue ($cols['Field'],$cols_id['Field'],$c[1]);
    $cols_sp_level=simba::getSpValue ($cols['Field'],$cols_id['Field'],$c[2]);
}
	else {
		$cols_sp_id=NULL;
		$cols_sp_subid=NULL;
		$cols_sp_level=NULL;
		$cols=NULL;
		$cols_id=NULL;
	}

//получить список полей когда выьрана таблица
if (isset($_POST['interface_name']) )
	{$dis='';//активировать поля ввода
	//добавить в массив столбцов дополнительные поля, не принадлежащие самой таблице
     if (trim($struct0['pole_global_const'])){
         $fields_arr=explode(",",trim($struct0['pole_global_const']));
         $cols_id['Field']=array_merge($cols_id['Field'],$fields_arr);
     }
     
	$cols_sp=simba::getSpValue ($cols_id['Field'],$cols_id['Field'],(isset($_POST['cols']))?$_POST['cols']:NULL);
	if (isset($_POST['cols'])) $dis1='';
	}

//получить массив структуры полей, т.е. получить каким полям какие константы и стили и их кол-во требуется
$pole_consts_styles=$GLOBALS["form_item"]->get_pole_consts_styles();


//получить список глобальных констатн
//$conf=simba::queryAllRecords('select sysname,name from config');
$tab_constr=simba::queryAllRecords('SELECT DISTINCT (table_name) FROM design_tables where table_type=1');



function create_pole_item_list($tek)
{//генерирует сложную структуру выпадающего списка касаемо полей ввода
    $aa=$GLOBALS["form_item"]->get_items_name_id();
    $item_=array();
    $cc=count($aa['category_list']);
    $ccc=count($aa['id']);
    foreach ($aa['category_list'] as $i=>$category_list){
        foreach ($aa['id'] as $j=>$id){
            if ($aa['category'][$j]==$aa['category_list'][$i]) {
                $item_['id'][$i][]=$aa['id'][$j];
				$item_['name'][$i][]=$aa['name'][$j];
            }
		}
        $item_['gr'][]=$aa['category_list_name'][$i];
    }
    return simba::getSpValue1 ($item_['name'],$item_['id'],$tek,$item_['gr'] );
}

?>

<style type="text/css">
<!--
.zagolov {	color: red;
}
-->
</style>

<div>
<form name="form1" method="post" action="">
        <input name="interface_tabl_tek" id="interface_tabl_tek" type="hidden" value="<?=$struct0['table_name'];?>">
        
        <input name="id0" type="hidden" value="<?=$struct0['id']?>">

  <div align="center" style="color:red; font-size:18px; font-weight:bold">Конструктор интерфейса древовидных таблиц</font> </div>

        <!--касаемо интерфеса -->
            <fieldset ><legend style="color:red; font-weight:bold">Интерфейс:</legend>
        Текущий интерфейс
          <select name="interface_name"  id="interface_name"  onchange="this.form.submit()">
            <?=$interface_sp;?>
          </select><br />
          Уничтожить интерфейс
          <select name="del_interface" class="txt1" id="del_interface">
            <?=$interface_sp1;?>
          </select>
          <input name="tab_constr" type="submit" class='del' id="tab_constr" value="Уничтожить" />
          <br />
          Новый интерфейс
          <input name="new_interface" type="text" id="new_interface" value="new_interface"  />
          для таблицы:
          <select name="tab_list"  id="tab_list">
            <?=$tab_list?>
          </select>
          <input name="interface_create" type="submit"  id="interface_create" value="Создать" />
          <br>
          Раздел интерфейса
          <select name="interface_razdel"  id="interface_razdel"  onchange="this.form.submit()">
            <?=simba::getSpValue1 (["Общие установки","Поля вначале таблицы (дополнительные)","Элементы дерева"],array(0,1,2),(isset($_POST['interface_razdel']))?$_POST['interface_razdel']:NULL); ?>
          </select>
        </fieldset>     
        
        
     <?php if (isset($_POST['interface_razdel']) && $_POST['interface_razdel']==1)  
		{
		$pole_dop_numb=0;
	if (isset($_POST['pole_dop_numb'])) {$pole_dop_numb=(int)$_POST['pole_dop_numb'];}//номер дополнительного поля (нумерация с 0)
//===============настройки для дополнительного поля до вывода всей таблицы row_type==1
$struct2=simba::queryOneRecord ('select * from design_tables where table_type=1 and row_type=1 and interface_name="'.$_POST['interface_name'].'" order by id limit '.$pole_dop_numb.',1');


$tab=simba::queryOneRecord('select count(*) as  count_pole_dop_numb from design_tables where table_type=1 and row_type=1 and 	interface_name="'.$_POST['interface_name'].'"');

$struct2['count_pole_dop_numb']=$tab['count_pole_dop_numb'];//кол-во дополнительных полей


//генерируем выпадающий список с номерами полей, для выбора
$a=array();
for ($i=0;$i<$struct2['count_pole_dop_numb'];$i++) $a[$i]=$i;
	
		?>

         <!--Начало дополнительного поля -->
      <input name="id1" type="hidden" id="id1" value="<?=$struct2['id'];?>">
      <fieldset style="background-color:#e2e2e2" ><legend><strong style="color:red;">Дополнительные поля перед деревом:</strong></legend>
          Конструируем поле номер:
            <select  id="pole_dop_numb" name="pole_dop_numb"  <?=$dis;?> onChange=this.form.submit()>
              <?=simba::getSpValue1 ($a,$a,$pole_dop_numb);?>
            </select>
            <input name="pole_dop_create" type="submit"  <?=$dis;?> id="pole_dop_create" value="Создать новое пустое поле">
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <input name="pole_dop_numb_del_b" type="submit" class="del" id="pole_dop_numb_del_b" value="Уничтожить это поле" <?=$dis;?>><br>

          (Дополнительный вывод до дерева: Поле получает имя<font color="red"><strong>$pole_dop<?=$pole_dop_numb ?></strong></font>и будет доступно из PHP (можно вставить в SQL инструкцию))
         <fieldset >
                    
                    <legend  style="color:red; font-weight:bold"><strong>Заголовок дополнительного поля:</strong></legend>
                    Текст:
                    <textarea id="caption1" name="caption1" cols="128" rows="1" wrap="VIRTUAL"   <?=$dis;?>><?php echo $design_tables_text_interfase['caption_dop_'.$pole_dop_numb];?></textarea>
                    
           <br>Порядок вывода
             <input type="text" size="5" value="<?=$struct2['col_por']?>" name="col_por1" id="col_por1"   <?=$dis;?>>
</fieldset>
				  <fieldset >
				  <legend style="color:red; font-weight:bold">Поле ввода</legend>
				  Тип:
				  <select id="pole_type1" name="pole_type1"  <?=$dis; ?>  onChange="ch_item(this.value,1);">
                    <?=create_pole_item_list($struct2['pole_type']);?>
                  </select><br>
				  Значение
				  <textarea name="value1" cols="115" rows="1"  id="value1" <?=$dis1;?>="<?=$dis1;?>"><?=$struct2['value']; ?></textarea>
	    </fieldset> 
		<fieldset>
                          <legend style="color:red; font-weight:bold"><strong>Атрибуты поля</strong></legend>
                          <span id='prop_out'></span>
        </fieldset>				
          <span id="list_out">
                          <fieldset >
                          <strong>
                          <legend style="color:red; font-weight:bold">Значения для полей-списков выбрать из:</legend>
                          </strong>
                          <table width="100%" border="0" cellpadding="0" cellspacing="0" >
                            <tr>
                              <td>Умолчание<br>(SQL)</td>
                              <td><textarea name="default_sql1" id="default_sql1" cols="137" rows="2" wrap="VIRTUAL" <?=$dis;?> ><?=stripslashes ($struct2['default_sql'])?></textarea></td>
                            </tr>
                            <tr>
                              <td>Таблицы:</td>
                              <td><select name="tab_select1" id="tab_select1"  <?=$dis;?>>
                                  <?=$tab_list1?>
                              </select></td>
                            </tr>
                            <tr>
                              <td>или SQL: </td>
                              <td><textarea name="pole_spisok_sql1" id="pole_spisok_sql1" cols="138" rows="2"  wrap="VIRTUAL" <?=$dis;?> ><?=stripslashes ($struct2['pole_spisok_sql'])?></textarea></td>
                            </tr>
                          </table>
                          </fieldset>
        </span>
<fieldset>
                          <strong>
                          <legend style="color:red; font-weight:bold">Константы для поля<br>
                          </legend>
                          </strong><span id="const_out"></span>
        </fieldset>
						
												
<fieldset>
                          <strong>
                          <legend style="color:red; font-weight:bold">Параметры<br>
                          </legend>
                          </strong><span id="properties_out"></span>
        </fieldset>
      </fieldset>	

<!-- вызываемые функции доп поля дерева-->
				  <fieldset  style="background-color:#e2e2e2"><legend style="color:red; font-weight:bold">Вызываемые функции</legend>
            <table width="100%"  border="0" cellpadding="0" cellspacing="0" >
                      <tr>
                        <td nowrap>Перед выводом значения на экран:</td>
                        <td width="72%" nowrap><input type="text" name="functions_befo_out" value="<?=$struct2['functions_befo_out']?>" size="80" /></td>
                        <td width="12%">&nbsp;</td>
                        <td width="12%">&nbsp;</td>
                      </tr>
                      <tr>
                        <td width="4%" nowrap>&nbsp;</td>
                        <td colspan="3" align="right" nowrap>
                        <input type="submit" name="pole_dop_numb_del_b" value="Уничтожить поле"  class="del" /></td>
                      </tr>
                    </table>
  </fieldset>
<!-- конец вызываемые функции -->

          <!--Конец дополнительного поля -->
    <?php }
	?>


<!--Начало элементы дерева -->
<?php if (isset($_POST['interface_razdel']) && $_POST['interface_razdel']==2)  
		{ ?>
      <fieldset ><legend style="color:red; font-weight:bold">Описание элемента дерева</legend>
Элемент таблицы
          <select id="cols"  name="cols"  onChange="this.form.submit()" <?=$dis;?>>
            <?=$cols_sp?>
          </select>
          <fieldset ><legend  style="color:red; font-weight:bold">Заголовок</legend>
              Последовательность вывода
        <input type="text" size="5" name="col_por" id="col_por" value="<?=$struct2['col_por']?>">
                Заголовок
                <textarea name="caption2"  cols="60" rows="1" wrap="VIRTUAL"   id="caption2"><?php if (isset($_POST['cols']) && isset($design_tables_text_interfase['caption_col_'.$_POST['cols']])) echo $design_tables_text_interfase['caption_col_'.$_POST['cols']];?></textarea>
                <input type="hidden" id="caption_style2" name="caption_style2">
        </fieldset>
<fieldset ><legend style="color:red; font-weight:bold">Поле ввода</legend>
            <table width="100%" border="0" cellspacing="0" cellpadding="0" >
              <tr>
                <td>Тип ввода:</td>
                <td><select id="pole_type2" name="pole_type2"  <?=$dis1;?> onChange="ch_item(this.value,2)">
                  <?=create_pole_item_list($struct2['pole_type']); ?>
                </select></td>
              </tr>
              <tr>
                <td>Значение</td>
                <td><textarea name="value2" cols="115" rows="1"  id="value2" <?=$dis1;?>="<?=$dis1;?>"><?=$struct2['value']; ?></textarea></td>
              </tr>
              
              <tr>
                <td><font color="red"><strong>имя поля</strong></font></td>
                <td><input id="pole_name2" name="pole_name2" type="text"  value="<?=$struct2['pole_name']?>" <?=$dis1;?>>
                  <font color="red">&lt;-
                  <select name="pole_name_2" id="pole_name_2"  onChange="document.getElementById('pole_name2').value=this.value" <?=$dis1;?>>
                    <?=simba::getSpValue1 ($cols_id['Field'],$cols_id['Field'],'id');?>
                  </select>
                  <input name="id2" type="hidden" value="<?=$struct2['id'];?>">
                  </font></td>
              </tr>
            </table>
        </fieldset>

<fieldset ><legend style="color:red; font-weight:bold">Атрибуты в поле</legend><span id='prop_out'></span></fieldset>
<span id="list_out"><fieldset ><legend style="color:red; font-weight:bold">Значения для полей-списков выбрать из:</legend>
<table width="100%" border="0" cellpadding="0" cellspacing="0" >
                            <tr>
                              <td>Умолчание<br>(SQL)</td>
                              <td><textarea name="default_sql2" id="default_sql2" cols="137" rows="2" wrap="VIRTUAL" <?=$dis;?> ><?=stripslashes ($struct2['default_sql'])?></textarea></td>
                            </tr>
                            <tr>
                              <td>Таблицы:</td>
                              <td><select name="tab_select2" id="tab_select2"  <?=$dis;?>>
                                  <?=$tab_list1?>
                              </select></td>
                            </tr>
                            <tr>
                              <td>или SQL: </td>
                              <td><textarea name="pole_spisok_sql2" id="pole_spisok_sql2" cols="138" rows="2"  wrap="VIRTUAL" <?=$dis;?> ><?=stripslashes ($struct2['pole_spisok_sql'])?></textarea></td>
                            </tr>
      </table>
                          </fieldset>
        </span>	
<fieldset >
                  <legend style="color:red; font-weight:bold">Константы для поля</legend>
                  <span id="const_out"></span>
        </fieldset>	
				<fieldset >
                          <legend style="color:red; font-weight:bold">Параметры<br>
                          </legend>
                          <span id="properties_out"></span>
        </fieldset>
		<fieldset >
          <legend style="color:red; font-weight:bold">До записи поля:</legend>
                  <table width="100%"  border="0" cellspacing="0" cellpadding="0" >
                    <tr>
                      <td width="25%">До записи поля:<br>                        </td>
                      <td width="25%"><input type="text" name="functions_befo" value="<?=$struct2['functions_befo']?>" /></td>
                      <td>После записи поля:</td>
                      <td><input type="text" name="functions_after" value="<?=$struct2['functions_after']?>" /></td>
                    </tr>
                    <tr>
                      <td>Перед выводом значения на экран:</td>
                      <td><input type="text" name="functions_befo_out" value="<?=$struct2['functions_befo_out']?>" /></td>
                      <td>Перед удалением записи:</td>
                      <td><input type="text" name="functions_befo_del" value="<?=$struct2['functions_befo_del']?>" /></td>
                    </tr>
                  </table>
        </fieldset>
              <div style="text-align:right"><input name="del_struct" type="submit" id="del_struct4" style="font-family: Verdana, Arial, Helvetica, sans-serif;font-size: xx-small;color: #FFFFFF;
			background-color: red;width: 118px;" value="Уничтожить интерфейс"></div>

      </fieldset>
<?php }
?>
      <!--Общие параметры инетрфейса -->
 <?php if (!isset($_POST['interface_razdel']) || $_POST['interface_razdel']==0)  
		{ ?>
      <fieldset >
        <legend style="font-size:12px; color:red; font-weight:bold">Общие настройки</legend>

        <table width="100%" border="1" cellpadding="0" cellspacing="0" >
          <tr>
            <td colspan="2">
                 <fieldset ><legend><strong>Спец поля дерева: (Имена полей таблицы:)</strong></legend>
        Уникальный идентификатор
        <select  id="cols__id" name="cols__id" >
          <?=$cols_sp_id;?>
        </select>
        Ссылка на родителя
        <select id="cols__subid" name="cols__subid" >
          <?=$cols_sp_subid;?>
        </select>
        Уровень элемента
        <select id="cols__level" name="cols__level" >
          <?=$cols_sp_level;?>
        </select>
      </fieldset> 

            </td>
          </tr>
          
          <tr>
          
          <tr>
            <td colspan="2">Ограничение уровней:
                <input name="col_por2" type="text"  value="<?=$struct0['col_por'];?>" size="8" >
              0- нет ограничений</td>
          </tr>
          <tr>
            <td width="100">SQL создания табл.</td>
            <td width="99%"><pre><?php if (isset($tab['Create Table'])) echo $tab['Create Table'];?>&nbsp;</pre></td>
          </tr>
          <tr>
            <td>Краткий HELP</td>
            <td><textarea name="coment0" cols="137" rows="3" wrap="VIRTUAL"  id="coment0" <?=$dis;?>><?php if (isset($design_tables_text_interfase['coment0'])) echo $design_tables_text_interfase['coment0'];?></textarea></td>
          </tr>
          <tr>
            <td>Условие выборки для вывода содержимого (то, что после слова <strong>WHERE,</strong> запроса)</td>
            <td><textarea name="pole_spisok_sql0" cols="137" rows="8" wrap="VIRTUAL"  id="pole_spisok_sql0" <?=$dis;?>><?=stripslashes ($struct0['pole_spisok_sql'])?></textarea></td>
          </tr>
          <tr>
            <td>Дополнительная SQL для удаления.</td>
            <td align="left"><textarea name="del_record" cols="135" rows="3" wrap="VIRTUAL"  id="del_record" <?=$dis;?>><?=stripslashes ($struct0['default_sql'])?></textarea></td>
          </tr>
          <tr>
            <td>Наличие кнопок:
                <input name="but[0]2" type="hidden" id="but[0]2" value="0">
                <input name="but[1]2" type="hidden" id="but[1]2" value="0">
                <input name="but[2]2" type="hidden" id="but[2]2" value="0">
                <input name="but[3]2" type="hidden" id="but[3]2" value="0">
                <input name="but[4]2" type="hidden" id="but[4]2" value="0">
                <input name="but[5]2" type="hidden" id="but[5]2" value="0">
                
                            </td>
            <td><label><input name="but[0]2" type="checkbox" id="but[0]2" value="1" <?php if (isset($but[0]) && $but[0]) echo"checked"?>>
                &quot;Записать&quot;;</label>
                <label><input name="but[1]2" type="checkbox" id="but[1]2" value="1" <?php if (isset($but[1]) && $but[1]) echo"checked"?>>
                &quot;Новый подуровень&quot;;</label>
                <label><input name="but[2]2" type="checkbox" id="but[2]2" value="1" <?php if (isset($but[2]) && $but[2]) echo"checked"?>>
                &quot;Удалить&quot;;</label>
                <label><input name="but[3]2" type="checkbox" id="but[3]2" value="1" <?php if (isset($but[3]) && $but[3]) echo"checked"?>>
                &quot;Создать корневой элемент&quot;</label><br>
                <label><input name="but[4]2" type="checkbox" id="but[4]2" value="1" <?php if (isset($but[4]) && $but[4]) echo"checked"?>>
                &quot;Сохранить все&quot;;</label>
                <label><input name="but[5]2" type="checkbox" id="but[5]2" value="1" <?php if (isset($but[5]) && $but[5]) echo"checked"?>>
            &quot;Оптимизировать таблицу&quot;</label></td>
          </tr>
          <tr>
            <td>общий заголовок:</td>
            <td><textarea name="caption0" cols="137" rows="2" wrap="VIRTUAL"  id="caption0" <?=$dis;?>><?php if (isset($design_tables_text_interfase['caption0'])) echo $design_tables_text_interfase['caption0'];?></textarea></td>
          </tr>
          
 <tr>
        <td>Список псевдонимов</td>
        <td colspan="2"><input name="col_name0" type="text"   size="135" value="<?=stripslashes ($struct0['pole_global_const'])?>"></td>
      </tr>
      <tr>
        <td>Очищать кеш:</td>
        <td colspan="2"><input name="cache_clear" type="hidden" value="0" />
        <input name="cache_clear" type="checkbox" id="cache_clear" value="1" <?php if ($struct0['sort_item_flag']>0) echo 'checked="checked"'; ?> /></td>
      </tr>

      <tr>
        <td>Теги кеша для поиска</td>
        <td colspan="2"><input name="cache_tags" type="text"  id="cache_tags" value="<?=stripslashes ($struct0['validator']); ?>" size="135"  /></td>
      </tr>
      <tr>

        <td colspan="3">
          
          
      <table width="100%"  border="0" cellspacing="0" cellpadding="0" >
                <tr>
                  <td>Обработчик записи интерфейса (функция)</td>
                  <td><input type="text" value="<?=$struct0['properties'];?>" name="functions_save_interface"  /></td>
                  <td >Функция получения данных (пусто-SQL)</td>
                  <td ><input type="text" value="<?=$struct0['functions_befo_out'];?>" name="functions_load_interface" readonly/></td>
                </tr>
                <tr>
                  <td>Обработчик удаления записей</td>
                  <td><input type="text" value="<?=$struct0['functions_befo_del'];?>" name="functions_del_interface"/></td>
                  <td>Функция которая вызывается ПОСЛЕ записи/обновления строки в базе</td>
                  <td><input type="text" value="<?=$struct0['functions_after'];?>" name="functions_after_save_interface" readonly/></td>
                </tr>
              </table>     
          
          
          </td>
      </tr>
        
        
        
        </table>
          <fieldset>
            <legend><strong>Права доступа</strong></legend>
              <table border="0" cellspacing="0" cellpadding="6">
                <tr>
                  <td colspan="2"><strong>Владелец:</strong></td>
                </tr>
                <tr>
                    <td>Имя пользователя:</td>
                    <td>Имя группы:</td>
                  </tr>
                <tr>
                    <td><?php
         $permission_arr=unserialize($struct0['caption_style']);
         //\Laminas\Debug\Debug::dump($permission_arr);
         if (empty($permission_arr['owner_user'])) {$permission_arr['owner_user']=0;}
         if(empty($permission_arr['owner_group'])){$permission_arr['owner_group']=0;}
         if (empty($permission_arr["permission"])){$permission_arr["permission"]=0740;}
         $g=simba::queryAllRecords("select u.id,concat(login,' (', if(name,name,''),', ',if(full_name,full_name,'')   ,')' ) as name 
                from users as u, users_ext as ue
                    where u.id=ue.id
                    order by name");

         $v=[0=>"Неизвестный"];
         foreach ($g["id"] as $k=>$vv){
             $v[$vv]=$g["name"][$k];
         }
         
         $gr=new  Element\Select('owner_user');
         $gr->setValueOptions($v);
         $gr->setValue($permission_arr['owner_user']);
         echo $this->formSelect($gr);
         ?></td>
                    <td><?php
         $g=simba::queryAllRecords("select id,name from users_group order by name");
         $v=[0=>"Неизвестная"];
         foreach ($g["id"] as $k=>$vv){
             $v[$vv]=$g["name"][$k];
         }
         
         $gr=new  Element\Select('owner_group');
         $gr->setValueOptions($v);
         $gr->setValue($permission_arr['owner_group']);
         echo $this->formSelect($gr);
         ?></td>
                  </tr>
                   <tr>
                  <td colspan="2"><strong>Доступ:</strong></td>
                </tr>
                  <tr>
                      <td colspan="2"><?php
$multiCheckbox = new Element\MultiCheckbox('permission');
 $bits=[
     //2048 => 'бит SUID (При создании записи ID юзера наследуются от родительской)',
    //1024 => 'бит SGID (При создании записи ID группы наследуются от родительской)',
    //512=> 'бит Sticky (Запрещает удалять не владельцу)',
    256 =>'(r) чтение для владельца',
    128=>'(w) запись для владельца' ,
    //64 =>'(x) запуск для владельца',
    32=>'(r) чтение для группы',
    16 =>'(w) запись для группы',
   // 8=>'(x) запуск для группы',
    4=>'(r) чтение для других',
    2=>'(w) запись для других',
    //1=>'(x) запуск для других'
];
$multiCheckbox->setValueOptions($bits);
$rez=[];
foreach ($bits as $b=>$v){
    if ($permission_arr["permission"] & $b){
        $rez[]=$permission_arr["permission"] & $b;
    }
}
     
 $multiCheckbox->setValue($rez);
$fc=$this->FormMultiCheckbox();
$fc->setSeparator("<br/>");
    echo $fc->render($multiCheckbox);    
         
         ?></td>
                  </tr>
           </table>
              </fieldset>

        </fieldset>
    
  <?php }
		?>
         
 <input name="save_all" style="background-color:#00CC66; color:#000000; font-weight:bold" type="submit"  id="save_all" <?=$dis;?> value="Сохранить">
</form>
</div>
<div id="constr_dialog" title="<?=$dialog_title;?>" style="color: red"><h2><?=$dialog_massage?></h2></div>

<script language="JavaScript" type="text/JavaScript">
$( "#constr_dialog" ).dialog({
    resizable: true,
    width: "auto",
    modal: true,
    autoOpen:'<?=$dialog_massage?>'>'',
    buttons: [
        {
            text: "Ok",
            click: function() {
                $( this ).dialog( "close" );
            }
        }
    ]
});

var pole_consts_styles=[],style_sp="",struct2=[],validator=[],selected_validator=[];
<?php //массив данных по всем полям (стили, кол-во элементов, сво-в и т.д.)
echo "pole_consts_styles=unserialize('".str_replace("'","\'",serialize($pole_consts_styles))."');\n";
echo "validator=unserialize('".addslashes(serialize(['validator_list'=>[],'validator_parametrs'=>[]]  ))."');";//получить все что есть валидатору
//все по структуре поля (того, что выбранор в данный момент)

if (isset($struct2)) echo "\n struct2=unserialize('".addslashes(serialize($struct2))."');\n";
 else echo "\n struct2=[];\n";
if (isset($_POST['interface_razdel']) && $_POST['interface_razdel']>0)   echo 'ch_item('.$struct2['pole_type'].')';
?>


 </script>
