<?php
/*
перекочевало из старой версии
заменены конфигурационные файлы на секции общей конфигурации приложения


8.5.17 - перенесено в пространство имен old - для временной миграции на ZF3

17.4.15 - изменен алгоритм обработки настроек из ini файлов



убрана таблица config, вместо нее данных записываются сразу имена констант
если указан файл настроек, то он инициализируется и его данные становятся константами


*/
use Admin\Lib\Formitem as form_item;
use Admin\Lib\Simba;
use Zend\Form\Element;

/*доступ к Admin\Controller\ConstructorLineController/index - это контроллер конструктора*/
$acl=$this->acl("Admin\Controller\ConstructorLineController/index");

$GLOBALS["form_item"]=new form_item($this,$this->config);

$dialog_massage="";
$dialog_title="";


$save_enable='disabled="disabled"';
//удаление всей структуры в конструкторе
if (isset($_POST['tab_constr'])){
    if ($acl->isAllowed("d")){
        simba::query("delete from design_tables_text_interfase where table_type=0 and interface_name='".$_POST['interface_name']."' ");
        simba::query('delete from design_tables where table_type=0 and interface_name="'.$_POST['del_interface'].'"');
    } else {
    $dialog_massage="Ошибка удаления. Доступ запрещен";
    $dialog_title="Ошибка";
    }
}


//создание нового интерфейса
if (isset($_POST['interface_create'])){
    if ($acl->isAllowed("w")){
        simba::replaceRecord (array(
            'row_type'=>0,
            'table_name'=>$_POST['tab_list'],
            'table_type'=>0,
            'interface_name'=>$_POST['new_interface']),
                              'design_tables');
        $_POST['interface_name']=$_POST['new_interface'];//сделать созданный интерфейс текущим
    } else {
    $dialog_massage="Ошибка Создания. Доступ запрещен";
    $dialog_title="Ошибка";
    }
}

//удаление выьранного дополн. поля
if (isset($_POST['pole_dop_numb_del_b']) && isset($_POST['id']) &&  $_POST['id']>0) {
    if ($acl->isAllowed("d")){
    //удалить старое значение
    simba::query("delete from design_tables_text_interfase where 
					(item_name='coment0' or item_name='caption0' or item_name='caption_dop_".$_POST['pole_dop_numb']."') 
					and table_type=0 and interface_name='".$_POST['interface_name']."' ");

	simba::query('delete from design_tables where table_type=0 and  id="'.$_POST['id'].'"');
    } else {
    $dialog_massage="Ошибка удаления. Доступ запрещен";
    $dialog_title="Ошибка";
    }

}


//уничтожение одной структыры, что выбрана
if (isset($_POST['del_struct'])){ //надо доработать!!!!!!!!!!!==============
        if ($acl->isAllowed("d")){
            simba::query ('delete from design_tables where table_type=0 and  interface_name="'.$_POST['interface_name'].'" and col_name="'.$_POST['cols'].'" and row_type="'.$_POST['row_type'].'"');
    } else {
    $dialog_massage="Ошибка удаления. Доступ запрещен";
    $dialog_title="Ошибка";
    }
}

if (!isset($_POST['row_type']))$_POST['row_type']=2;

if (isset($_POST['pole_dop_create'])) {
    if ($acl->isAllowed("w")){
        simba::replaceRecord (array('table_name'=>$_POST['interface_tabl_tek'],
														'interface_name'=>$_POST['interface_name'],
														'table_type'=>0,'row_type'=>1),
													'design_tables');
    } else {
    $dialog_massage="Ошибка создания нового поля. Доступ запрещен";
    $dialog_title="Ошибка";
    }

}


if (isset($_POST['save_all'])){//запись
    if ($acl->isAllowed("w")){
        if ($_POST['interface_razdel']==0)	{//запись общих настроек
            if ($_POST['form_input_type']==2) {
                $form_spis_=implode(',',$_POST['form_spis']);
            } else {
                $form_spis_=$_POST['form_spis'][0];
            }

            if (empty($_POST["permission"])){
                $permission=484;
            } else {
                $permission=$_POST["permission"];
                $permission=array_sum($_POST["permission"]);
            }
            simba::replaceRecord (array('id'=>$_POST['id'],
                        'row_type'=>0,
                        'table_name'=>$_POST['interface_tabl_tek'],
                        'pole_global_const'=>$_POST['pole_global_const0'],
                        'caption_style'=>serialize(["owner_user"=>$_POST["owner_user"],"owner_group"=>$_POST["owner_group"],"permission"=>$permission]),//доступ
                        'pole_style'=>"",//""$_POST['imp_exp'],
                        'col_name'=>$_POST['col_name0'],
                        'pole_name'=>$_POST['col___id'],
                        'default_sql'=>$_POST['del_record'],
                        'pole_prop'=>implode(',',$_POST['enable_multi_action']),
                        'col_por'=>$_POST['form_input_type'],
                        'pole_type'=>$form_spis_,
                        'interface_name'=>$_POST['interface_name'],
                        'table_type'=>0,
                        'value'=>serialize(array('form_elements_new_record'=>$_POST['form_elements_new_record'],
                                                 'form_elements_jmp_record'=>$_POST['form_elements_jmp_record'],
                                                'create_new_zap_flag'=>$_POST['create_new_zap_flag']
                                                )
                                          ),
                        'properties'=>$_POST['functions_save_interface'],
                        'functions_befo_out'=>$_POST['functions_load_interface'],
                        'functions_befo_del'=>$_POST['functions_del_interface'],
                         'functions_after'=>$_POST['functions_after_save_interface'],               
                        'validator'=>$_POST['cache_tags'],
                        'sort_item_flag'=>$_POST['cache_clear'],
                        'pole_spisok_sql'=>$_POST['pole_spisok_sql0']
                        ),
                    'design_tables');

            //удалить старое значение
            simba::query("delete from design_tables_text_interfase where  (item_name='coment0' or item_name='caption0') 
                        and table_type=0 and interface_name='".$_POST['interface_name']."' ");
            //запишем текст интерфейса
            if ($_POST['coment0']) simba::replaceRecord (array('item_name'=>'coment0',
                                        'interface_name'=>$_POST['interface_name'],
                                        'table_type'=>0,
                                        'language'=>"ru_RU",
                                        'text'=>$_POST['coment0']),
                                'design_tables_text_interfase');
            if ($_POST['caption0']) simba::replaceRecord (array('item_name'=>'caption0',
                                        'interface_name'=>$_POST['interface_name'],
                                        'table_type'=>0,
                                        'language'=>"ru_RU",
                                        'text'=>$_POST['caption0']),
                                'design_tables_text_interfase');
            }


        if ($_POST['interface_razdel']==1)	{//запись дополнительных полей
            $pole_spisok_sql=$_POST['pole_spisok_sql'];
            if ($_POST['tab_select']) {$pole_spisok_sql='select id,name from '.$_POST['tab_select'];}
            simba::replaceRecord (
                array(
                'id'=>$_POST['id'],
                'row_type'=>1,
                'table_type'=>0,
                'table_name'=>$_POST['interface_tabl_tek'],
                'pole_type'=>$_POST['pole_type'],
                'caption_style'=>"",//$_POST['caption_style'],
                'pole_style'=>"",//(is_array($_POST['pole_style'])) ? implode(',',$_POST['pole_style']):$_POST['pole_style'],
                'pole_prop'=>(is_array($_POST['pole_prop'])) ? implode(',',$_POST['pole_prop']):$_POST['pole_prop'],
                'default_sql'=>$_POST['default_sql'],
                //properties=>(is_array($_POST['properties1']))? implode (',',str_replace(',',' ',$_POST['properties1'])):'',
                'properties'=>serialize((isset($_POST['properties']))?$_POST['properties']:NULL),
                'pole_spisok_sql'=>$pole_spisok_sql,
                'value'=>$_POST['value'],
                'interface_name'=>$_POST['interface_name'],
                'functions_befo_out'=>$_POST['functions_befo_out'],
                'col_por'=>($_POST['col_por']==="") ? null : (int)$_POST['col_por']

                ),'design_tables');
            //удалить старое значение
            simba::query("delete from design_tables_text_interfase where item_name='caption_dop_".$_POST['pole_dop_numb']."'
                        and table_type=0 and interface_name='".$_POST['interface_name']."' ");
            //запишем текст интерфейса
            if ($_POST['caption']) {
                simba::replaceRecord (array('item_name'=>'caption_dop_'.$_POST['pole_dop_numb'],
                                        'table_type'=>0,
                                        'interface_name'=>$_POST['interface_name'],
                                        'language'=>"ru_RU",
                                        'text'=>$_POST['caption']),
                                'design_tables_text_interfase');		
            }

            }

        if (isset($_POST['cols'])){
            if ($_POST['row_type']==2){
                //удалить старое значение
                simba::query("delete from design_tables_text_interfase where item_name='caption_col_".$_POST['cols']."'
                        and table_type=0 and interface_name='".$_POST['interface_name']."' ");
                if ($_POST['caption']){
                    simba::replaceRecord (array('item_name'=>'caption_col_'.$_POST['cols'],
                                            'interface_name'=>$_POST['interface_name'],
                                            'language'=>"ru_RU",
                                            'text'=>$_POST['caption']),
                                    'design_tables_text_interfase');
                }
            }
            //удалить старое значение
            simba::query("delete from design_tables_text_interfase where 
                     item_name='values_message_".$_POST['cols']."' and interface_name='".$_POST['interface_tabl_tek']."' and table_type=0");
            //запишем текст интерфейса

                if ($_POST['values_message']){
                    simba::replaceRecord (array('item_name'=>'values_message_'.$_POST['cols'].$_POST['row_type'],
                                            'interface_name'=>$_POST['interface_name'],
                                            'language'=>"ru_RU",
                                            'table_type'=>0,
                                            'text'=>$_POST['values_message']),
                                    'design_tables_text_interfase');
                }


            if (!isset($_POST['pole_style'])) {$_POST['pole_style']=NULL;}
            if (is_array($_POST['pole_style'])) {$p__s=implode(',',$_POST['pole_style']);} else {$p__s=$_POST['pole_style'];}
            //$row_type=2 это область первой и остальных строки и заголовков таблицы
            $pole_spisok_sql=$_POST['pole_spisok_sql'];
            if ($_POST['tab_select']) {$pole_spisok_sql='select id,name from '.$_POST['tab_select'];}
            //удалим обратные слеши, если они вдруг есть 
            /*if (isset($_POST['properties']))
                {
                if (is_array($_POST['properties'])) foreach ($_POST['properties'] as $k=>$v) $_POST['properties'][$k]=simba::stripslash($v);
                    else $_POST['properties']=simba::stripslash($_POST['properties']);


                }*/
            simba::$flag=false;
            if (!isset($_POST['pole_global_const'])) {$_POST['pole_global_const']=NULL;}
            if (!isset($_POST['_selected_validator'])) {$_POST['_selected_validator']=NULL;}
            if (!isset($_POST['pole_prop'])) {$_POST['pole_prop']=NULL;}
            simba::replaceRecord (
                array(
                    'id'=>(int)$_POST['id'],
                    'row_type'=>$_POST['row_type'],
                    'table_name'=>$_POST['interface_tabl_tek'],
                    'table_type'=>0,
                    'col_name'=>$_POST['cols'],
                    'functions_befo_out'=>$_POST['functions_befo_out'],
                    'pole_type'=>$_POST['pole_type'],
                    'col_por'=>(isset($_POST['col_por']))?$_POST['col_por']:NULL,
                    'functions_befo'=>$_POST['functions_befo'],
                    'functions_after'=>$_POST['functions_after'],
                    'functions_befo_del'=>$_POST['functions_befo_del'],
                    'pole_style'=>$p__s,
                    'pole_spisok_sql'=>$pole_spisok_sql,
                    'pole_global_const'=>(is_array($_POST['pole_global_const'])) ? implode (',',$_POST['pole_global_const']) :$_POST['pole_global_const'],
                    'pole_name'=>$_POST['pole_name'],
                    //caption_style
                    'validator'=>serialize($_POST['_selected_validator']),
                    'pole_prop'=>(is_array($_POST['pole_prop']))? implode(',',$_POST['pole_prop']):$_POST['pole_prop'],
                    'pole_global_const'=>(is_array($_POST['pole_global_const'])) ? implode (',',$_POST['pole_global_const']) :$_POST['pole_global_const'],
                    //properties=>(is_array($_POST['properties']))? implode (',',str_replace(',',' ',$_POST['properties'])):'',
                    'properties'=> serialize((isset($_POST['properties'])?$_POST['properties']:NULL)),
                    'value'=>(isset($_POST['value']))?$_POST['value']:NULL,
                    'sort_item_flag'=>(isset($_POST['sort_item_flag']))?$_POST['sort_item_flag']:NULL,
                    'interface_name'=>(isset($_POST['interface_name']))?$_POST['interface_name']:NULL,
                    'col_function_array'=>serialize((isset($_POST['col_function_array']))? $_POST['col_function_array']:NULL )
                    ),'design_tables');//print_r( strlen( serialize( $_POST['properties'])));

            } 
    } else {
    $dialog_massage="Ошибка записи. Доступ запрещен";
    $dialog_title="Ошибка";
    }

}

//ролучить список доступных линейных интерфейсов
$interface_sp=simba::queryAllRecords("select distinct(interface_name) as interface_name from design_tables where table_type=0 and row_type=0 order by interface_name");
simba::$null_simvol='';
$interface_sp1=simba::getSpValue ($interface_sp['interface_name'],$interface_sp['interface_name'],0);
$interface_sp=simba::getSpValue ($interface_sp['interface_name'],$interface_sp['interface_name'],(isset($_POST['interface_name']))?$_POST['interface_name']:NULL);

//получить список таблиц вооьбще
$tab_all=simba::queryAllRecords ('show tables');

$tab_create_del=simba::getSpValue ($tab_all['Tables_in_'.DBNAME],$tab_all['Tables_in_'.DBNAME],9999);
$tab_list1=simba::getSpValue ($tab_all['Tables_in_'.DBNAME],$tab_all['Tables_in_'.DBNAME],999);//это список таблиц,

$tab_list=simba::getSpValue ($tab_all['Tables_in_'.DBNAME],$tab_all['Tables_in_'.DBNAME],(isset($_POST['interface_tabl_tek']))?$_POST['interface_tabl_tek']:NULL);
//получить список стилей
//$style=simba::queryAllRecords('select id,name from style where modul_type=0');

//считаем текущие настройки и структуру таблицы
//===============настройки для ывсей таблицы row_type==0
if (!isset($_POST['interface_name']))$_POST['interface_name'] ='';
$struct0=simba::queryOneRecord ('select * from design_tables where table_type=0 and row_type=0  and interface_name="'.$_POST['interface_name'].'"');



//получить отдельно инструкцию создания в зависимости от выбора
$tab='';
if (isset($_POST['col___id']) && $struct0['table_name']>'') $tab=simba::queryOneRecord ('show create table '.$struct0['table_name']);//================$tab используется в HTML коде!!!!!!!!!!!!!!!!!!!!!!!!!!!


//$pole_dop_numb_sp1=simba::getSpValue1 ($a,$a,-1);

if(!isset($cols_sp_id)) {$cols_sp_id="";}

//получить список полей когда выьрана таблица
if ($_POST['interface_name']) 
	{$cols=array();$cols['Field']=array();
	$dis='';//активировать поля ввода
		if ($struct0['table_name']>'') 
			{$cols=simba::queryAllRecords ('show columns from '.$struct0['table_name']);
			$cols_sp_id=simba::getSpValue ($cols['Field'],$cols['Field'],$struct0['pole_name']);//это для выбора уникального идентификатора
			
			$fields_arr=explode(",",$struct0['col_name']);
			$fields_arr=array_merge($fields_arr,$cols['Field']);
			
			$cols_sp_for_form=simba::getSpValueMulti ($fields_arr,$fields_arr,$struct0['pole_type']);//это для выбора списка колонок или одной колонки
			}
			else 
				{//если у нас загрузка данных из функции, тогда сделаем фиктивный идентификатор id
				$alias=explode(',',$struct0['col_name']);
				$cols_sp_id=simba::getSpValue ($alias,$alias,$struct0['pole_name']);
				}
		
		
		if ($struct0['col_name']) 
					{//проверим псевдонимы, если они есть, тогда их добавить к основному списку
					$alias=explode(',',$struct0['col_name']);
					for ($i=0;$i<count($alias);$i++) $cols['Field'][]=$alias[$i];
					}
		$cols_id['Field']=$cols['Field'];//идентификаторы это и есть имена полей и спевдонимов
		$cols['Field'][]='buttons0';//$cols['Field'][]='кнопки2';$cols['Field'][]='кнопки3';$cols['Field'][]='кнопки4';
		$cols_id['Field'][]=1;//$cols_id['Field'][]=2;$cols_id['Field'][]=3;$cols_id['Field'][]=4;
				//добавить в массив столбцов дополнительные поля, не принадлежащие самой таблице
		if (!isset($_POST['cols'])) $_POST['cols']=NULL;
		$cols_sp=simba::getSpValue ($cols['Field'],$cols_id['Field'],$_POST['cols']);
		//загрузим данные из языковой таблицы сопровождения 
		$c=simba::queryAllRecords("select item_name,text from design_tables_text_interfase where 
							table_type=0  and interface_name='".$_POST['interface_name']."'");
		for ($i=0;$i<simba::numRows();$i++)
			$design_tables_text_interfase[$c['item_name'][$i]]=$c['text'][$i];
			
	//if ($_POST['cols']) $dis1='';
	}

//получить массив структуры полей, т.е. получить каким полям какие константы и стили и их кол-во требуется
$pole_consts_styles=$GLOBALS["form_item"]->get_pole_consts_styles();

//получить список глобальных констатн
//$conf=simba::queryAllRecords('select sysname,name from config');
$tab_constr=simba::queryAllRecords('SELECT DISTINCT (table_name) FROM design_tables where table_type=0');



function create_pole_item_list($tek)
{//генерирует сложную структуру выпадающего списка касаемо полей ввода

$aa=$GLOBALS["form_item"]->get_items_name_id();
$item_=[];
$cc=count($aa['category_list']);
$ccc=count($aa['id']);
//for ($i=0; $i<$cc;$i++)
foreach ($aa['category_list'] as $i=>$category_list)
	{
	//for ($j=0;$j<$ccc;$j++)
	foreach ($aa['id'] as $j=>$id)
		{
			if ($aa['category'][$j]==$aa['category_list'][$i]) 
				{
				$item_['id'][$i][]=$aa['id'][$j];
				$item_['name'][$i][]=$aa['name'][$j];
				}
		}
	$item_['gr'][]=$aa['category_list_name'][$i];
	}
return simba::getSpValue1 ($item_['name'],$item_['id'],$tek,$item_['gr'] );
}

?>
<form name="form1" method="post" action="#">
  <div align="center" style="color:red; font-size:18px; font-weight:bold">Конструктор линейных интерфейсов</font> </div>
    

        <span class="zagolov">
        <input name="interface_tabl_tek" id="interface_tabl_tek" type="hidden" value="<?=$struct0['table_name'];?>">
        </span>
        <!--касаемо интерфеса -->
 
  <fieldset ><legend style="color:red; font-weight:bold">Интерфейс</legend>
       Текущий интерфейс
          <select name="interface_name"  id="interface_name"  onchange="this.form.submit()">
            <?=$interface_sp;?>
          </select>
          <br />
          Уничтожить интерфейс:
          <select name="del_interface" class="txt1" id="del_interface">
            <?=$interface_sp1;?>
          </select>
          <input name="tab_constr" type="submit" class='del' id="tab_constr" value="Уничтожить" />
          <br />
          Новый интерфейс
          <input name="new_interface" type="text" id="new_interface" value="new_interface"  />
          для таблицы:
          <select name="tab_list"  id="tab_list">
            <?=$tab_list?>
          </select>
          <input name="interface_create" type="submit"  id="interface_create" value="Создать" />
          <br />
          Раздел интерфейса
          <select name="interface_razdel"  id="interface_razdel"  onchange="this.form.submit()">
            <?=simba::getSpValue1 (["Общие установки","Поля вначале таблицы (дополнительные)","Колонки таблицы"],array(0,1,2),(isset($_POST['interface_razdel']))?$_POST['interface_razdel']:""); ?>
          </select>
  </fieldset>   


<!--Общие параметры инетрфейса -->
<?php if ( !isset($_POST['interface_razdel']) || $_POST['interface_razdel']==0)  
		{ ?>
<fieldset  style="background-color:#e2e2e2"><legend style="font-weight:bold; color:red">Множественные операции</legend>
            <?php if ($struct0['table_name']>'') $save_enable='';
			  $q=explode(',',$struct0['pole_prop']);
			  $global_action_name_=["Удалить выбранное","Сохранить все","Оптимизировать таблицу","Очистить кэш"];
			  for ($i=0;$i<count($global_action_name_);$i++)
			  {
			  echo "<input name=\"enable_multi_action[$i]\" type=\"hidden\" value=\"0\">";
              if (isset($q[$i]) && $q[$i]>0) echo "<input name=\"enable_multi_action[$i]\" type=\"checkbox\" value=\"1\" checked>".$global_action_name_[$i].';';
			  	else echo "<input name=\"enable_multi_action[$i]\" type=\"checkbox\" value=\"1\">".$global_action_name_[$i].';';
				echo '&nbsp;';
			  }

?>
<input name="id" type="hidden" value="<?=$struct0['id'];?>">


  </fieldset> 
  <fieldset   style="background-color:#e2e2e2"><legend  style="font-weight:bold; color:red">Внешний вид:</legend>
          Стиль ввода данных:
            <select name="form_input_type"  id="form_input_type"  onChange="_msg_(this.value)">
              <?=simba::getSpValue1 (["Табличная","Форма с полями"],array(0,1,2),$struct0['col_por']);?>
            </select>
            &nbsp;&nbsp;Для формы выводить элементы:<?php $form_elements_=unserialize($struct0['value'])?> 
            <label><input name="form_elements_new_record" type="hidden" id="form_elements_new_record" value="0">
            <input name="form_elements_new_record" type="checkbox" id="form_elements_new_record" value="1" <?php if ($form_elements_['form_elements_new_record']>0) echo 'checked ';?>>
            Создать запись</label>

            <label><input name="form_elements_jmp_record" type="hidden" id="form_elements_jmp_record" value="0">
            <input name="form_elements_jmp_record" type="checkbox" id="form_elements_jmp_record" value="1" <?php if ($form_elements_['form_elements_jmp_record']>0) echo 'checked ';?>>
            Переходы по записям</label>
            
            <label><input name="create_new_zap_flag" type="hidden" id="create_new_zap_flag" value="0">
            <input name="create_new_zap_flag" type="checkbox" id="create_new_zap_flag" value="1" <?php if (isset($form_elements_['create_new_zap_flag']) && $form_elements_['create_new_zap_flag']>0) echo 'checked ';?>>
            Насильно установить в режим ввода новой записи</label>
          
            <br>
           <span id="msg__">Список полей взять из поля:</span>
            <select name="form_spis[]"  id="form_spis[]" >
             <?=$cols_sp_for_form;?>
        </select>
<script language="JavaScript" type="text/JavaScript">
if (<?=(int)$struct0['col_por'];?>==2) 
	{document.getElementById("msg__").innerHTML="Список полей (для упрощ. таблицы) взять из поля:";
	document.getElementById("form_spis[]").multiple=true
	document.getElementById("form_spis[]").size=6; 
	} else document.getElementById("form_spis[]").multiple=false
function _msg_(value)
{
if (value==2)  
	{document.getElementById("form_spis[]").size=6; document.getElementById("msg__").innerHTML="Список полей (для упрощ. таблицы) взять из поля:"
	document.getElementById("form_spis[]").multiple=true}
	else {document.getElementById("form_spis[]").size=0;document.getElementById("msg__").innerHTML="Список полей взять из поля:"
	document.getElementById("form_spis[]").multiple=false}
}

</script>

            (если пусто, то просто нумерация записей)<br>
           
  </fieldset> 
      
<fieldset   style="background-color:#e2e2e2"><legend style="font-weight:bold; color:red">Общие установки:</legend>
    <table width="100%" border="0" cellspacing="0" cellpadding="0" >


      <tr>
        <td>Уникальный идентификатор:</td>
        <td colspan="2"><select name="col___id"  id="col__id" >
          <?=$cols_sp_id;?>
        </select></td>
      </tr>
      <tr>
        <td>Краткий HELP</td>
        <td colspan="2"><textarea name="coment0" id="coment0" cols="135" rows="3" wrap="VIRTUAL" ><?php if (isset($design_tables_text_interfase['coment0'])) echo $design_tables_text_interfase['coment0']; 
			 ?></textarea></td>
      </tr>
      <tr>
        <td>Выводить по:</td>
        <td colspan="2"><input name="pole_global_const0" type="text" id="pole_global_const0"  value="<?=$struct0['pole_global_const'];?>">
строк</td>
      </tr>
      <tr>
        <td>общий заголовок таблицы:</td>
        <td colspan="2"><textarea name="caption0" id="caption0" cols="135" rows="4" wrap="VIRTUAL" ><?php if (isset($design_tables_text_interfase['caption0']) ) echo $design_tables_text_interfase['caption0']; 
			?></textarea></td>
      </tr>
      <tr>
        <td>SQL создания табл.</td>
        <td colspan="2"><pre><?php if ($struct0['table_name']>'') {$tab=simba::queryOneRecord('show create table '.$struct0['table_name']); echo $tab['Create Table'];} ?></pre></td>
      </tr>
      <tr>
        <td><?php if(!isset($_POST['col___id'])) $_POST['col___id']=NULL ;?>SQL удаления,<strong style="color='red'">$id</strong>уникальный идентификатор <?php echo ' <b>$'.$_POST['col___id'].'</b>';?></td>
        <td colspan="2"><textarea name="del_record" cols="135" rows="3" wrap="VIRTUAL"  id="del_record" ><?=stripslashes ($struct0['default_sql'])?></textarea></td>
      </tr>
      <tr>
        <td>Выборка (SQL)</td>
        <td colspan="2"><textarea name="pole_spisok_sql0" cols="135" rows="5" wrap="VIRTUAL"  ><?=stripslashes ($struct0['pole_spisok_sql'])?></textarea></td>
      </tr>
      <tr>
        <td>Список псевдонимов</td>
        <td colspan="2"><input name="col_name0" type="text"   size="135" value="<?=stripslashes ($struct0['col_name'])?>"></td>
      </tr>
      <tr>
        <td>При изменении данных очистить кеш</td>
        <td colspan="2"><input name="cache_clear" type="hidden" value="0" />
        <input name="cache_clear" type="checkbox" id="cache_clear" value="1" <?php if ($struct0['sort_item_flag']>0) echo 'checked="checked"'; ?> /></td>
      </tr>
      <tr>
        <td>Теги для поиска в кеше</td>
        <td colspan="2"><input name="cache_tags" type="text"  id="cache_tags" value="<?=stripslashes ($struct0['validator']); ?>" size="135"  /></td>
      </tr>
            
      <tr>
        <td colspan="3">				  <fieldset><legend><strong>Глобальные функции интерфейса</strong></legend>
              <table width="100%"  border="0" cellspacing="0" cellpadding="0" >
                <tr>
                  <td>Обработчик записи интерфейса (функция)</td>
                  <td><input type="text" value="<?=$struct0['properties'];?>" name="functions_save_interface" /></td>
                  <td >Функция получения данных (пусто-SQL)</td>
                  <td ><input type="text" value="<?=$struct0['functions_befo_out'];?>" name="functions_load_interface" /></td>
                </tr>
                <tr>
                  <td>Обработчик удаления записей</td>
                  <td><input type="text" value="<?=$struct0['functions_befo_del'];?>" name="functions_del_interface" /></td>
                  <td >Функция которая вызывается ПОСЛЕ записи/обновления строки в базе</td>
                  <td ><input type="text" value="<?=$struct0['functions_after'];?>" name="functions_after_save_interface" /></td>
                </tr>
              </table>

            </fieldset>
          <fieldset>
            <legend><strong>Права доступа</strong></legend>
              <table border="0" cellspacing="0" cellpadding="6">
                <tr>
                  <td colspan="2"><strong>Владелец:</strong></td>
                </tr>
                <tr>
                    <td>Имя пользователя:</td>
                    <td>Имя группы:</td>
                  </tr>
                <tr>
                    <td><?php
         $permission_arr=unserialize($struct0['caption_style']);
         //\Zend\Debug\Debug::dump($permission_arr);
         if (empty($permission_arr['owner_user'])) {$permission_arr['owner_user']=0;}
         if(empty($permission_arr['owner_group'])){$permission_arr['owner_group']=0;}
         if (empty($permission_arr["permission"])){$permission_arr["permission"]=0740;}
         $g=simba::queryAllRecords("select u.id,concat(login,' (', if(name,name,''),', ',if(full_name,full_name,'')   ,')' ) as name 
                from users as u, users_ext as ue
                    where u.id=ue.id
                    order by name");
         $v=[0=>"Неизвестный"];
         foreach ($g["id"] as $k=>$vv){
             $v[$vv]=$g["name"][$k];
         }
         
         $gr=new  Element\Select('owner_user');
         $gr->setValueOptions($v);
         $gr->setValue($permission_arr['owner_user']);
         echo $this->formSelect($gr);
         ?></td>
                    <td><?php
         $g=simba::queryAllRecords("select id,name from users_group order by name");
         $v=[0=>"Неизвестная"];
         foreach ($g["id"] as $k=>$vv){
             $v[$vv]=$g["name"][$k];
         }
         
         $gr=new  Element\Select('owner_group');
         $gr->setValueOptions($v);
         $gr->setValue($permission_arr['owner_group']);
         echo $this->formSelect($gr);
         ?></td>
                  </tr>
                   <tr>
                  <td colspan="2"><strong>Доступ:</strong></td>
                </tr>
                  <tr>
                      <td colspan="2"><?php
$multiCheckbox = new Element\MultiCheckbox('permission');
 $bits=[
     //2048 => 'бит SUID (При создании записи ID юзера наследуются от родительской)',
    //1024 => 'бит SGID (При создании записи ID группы наследуются от родительской)',
    //512=> 'бит Sticky (Запрещает удалять не владельцу)',
    256 =>'(r) чтение для владельца',
    128=>'(w) запись для владельца' ,
    //64 =>'(x) запуск для владельца',
    32=>'(r) чтение для группы',
    16 =>'(w) запись для группы',
   // 8=>'(x) запуск для группы',
    4=>'(r) чтение для других',
    2=>'(w) запись для других',
    //1=>'(x) запуск для других'
];
$multiCheckbox->setValueOptions($bits);
$rez=[];
foreach ($bits as $b=>$v){
    if ($permission_arr["permission"] & $b){
        $rez[]=$permission_arr["permission"] & $b;
    }
}
     
 $multiCheckbox->setValue($rez);
$fc=$this->FormMultiCheckbox();
$fc->setSeparator("<br/>");
    echo $fc->render($multiCheckbox);    
         
         ?></td>

                  </tr>
           </table>
              </fieldset>
          
          
          </td>
      </tr>
    </table>
</fieldset>
<!--Общие параметры инетрфейса КОНЕЦ -->
  <?php }
  ?>

   <!--описатель колонок -->
<?php //-------------------------------------------------------------------------------------------------------------------------------------------------
 if (isset($_POST['interface_razdel']) && $_POST['interface_razdel']==2)  
		{ 
//===============настройки для 1-я строка до вывода всей таблицы row_type==2
$struct2=simba::queryOneRecord ('select * from design_tables where table_type=0 and row_type="'.$_POST['row_type'].'" and interface_name="'.$_POST['interface_name'].'" and col_name="'.$_POST['cols'].'"');
if ($struct0['table_name']>'' && $_POST['cols']>'') $save_enable='';
if ($_POST['cols']>'') $save_enable_cols=''; else  $save_enable_cols='disabled="disabled"';
		?>
<input name="id" type="hidden" value="<?=$struct2['id'];?>">
<fieldset  style="background-color:#e2e2e2"><legend style="color:red; font-weight:bold">Колонки</legend>
	      Имя колонки
	        <select name="cols" id="cols"  onChange="this.form.submit()" >
              <?=$cols_sp?>
        </select>
&nbsp;&nbsp;&nbsp;&nbsp;	         
<input type="checkbox" name="sort_item_flag" value="1" <?php if ($struct2['sort_item_flag']>0) echo 'checked ';?> >Разрешить сортировку колонки<br>
	        Настройка для:
	        <select name="row_type" id="row_type"  onChange="this.form.submit()" <?=$save_enable_cols;?> >
	          <?=simba::getSpValue1 (["первой строки таблицы","Середина таблицы","Последняя строка таблицы"],array(2,3,4),$_POST['row_type']);?>
        </select>
	        <br>
<fieldset ><legend style="color:red; font-weight:bold">Поле ввода</legend>
	      Порядок вывода:
	        <input name="col_por" id="col_por" size="4" value="<?=$struct2['col_por']?>"   <?=$save_enable_cols; if ($_POST['row_type']==3) echo 'disabled="disabled"';   ?>>
           
	        Заголовок:
            <textarea name="caption"  cols="60" rows="1" wrap="VIRTUAL"  id="caption" <?=$save_enable_cols;?>><?php if (isset($design_tables_text_interfase['caption_col_'.$_POST['cols']]) ) echo $design_tables_text_interfase['caption_col_'.$_POST['cols']]; 
			   ?></textarea>
	        <br />
          Тип ввода:
	        <select name="pole_type" id="pole_type"  onChange="ch_item(this.value,2);" <?=$save_enable_cols;?>>
              <?php echo create_pole_item_list($struct2['pole_type']); 
					?>
</select>
            <br>
          Значение (умолчание)
	        <textarea name="value" cols="135" rows="1"  id="value" <?=$save_enable_cols;?> ><?=$struct2['value'];?></textarea><br />
          Текст (умолчание)
	        <textarea name="values_message" cols="135" rows="1"  id="values_message" <?=$save_enable_cols;?> ><?php if (isset($design_tables_text_interfase['values_message_'.$_POST['cols'].$_POST['row_type']])) echo $design_tables_text_interfase['values_message_'.$_POST['cols'].$_POST['row_type']];
			?></textarea><br />

<br />
	        <span class="zagolov"><strong>имя:</strong></span>
	        <input name="pole_name" id="pole_name" type="text" <?=$save_enable_cols;?>  value="<?=$struct2['pole_name'];?>">
&lt;-
<select name="pole_name_" id="pole_name_"  onChange="document.getElementById('pole_name').value=this.value">
  <?php $cols=simba::queryAllRecords ('show columns from '.$struct0['table_name']);
if ($struct0['col_name']) 
			{//проверим псевдонимы, если они есть, тогда их добавить к основному списку
			$alias=explode(',',$struct0['col_name']);
			for ($i=0;$i<count($alias);$i++) $cols['Field'][]=$alias[$i];
					}
$cols_['Field']=$cols['Field'];
if ($_POST['row_type']==2)
	{//первая строка
	if (is_numeric ($_POST['cols'])) {$cols_['Field'][]='save'.$_POST['cols'];$cols['Field'][]='save'.$_POST['cols'];}
	}
	else 
	{//остальное
	if (is_numeric ($_POST['cols'])) {$cols_['Field'][]='save'.$_POST['cols'].',del'.$_POST['cols'];$cols['Field'][]='save'.$_POST['cols'].',del'.$_POST['cols'];}
	}

//добавить в массив столбцов дополнительные поля, не принадлежащие самой таблице
echo simba::getSpValue ($cols['Field'],$cols_['Field'],'id');

?>
</select>
 <br>(Тип имен:$pole_dopN - имя дополнительного поля N=0-9; save,del - сохранение/удаление записи; exec - произвольное выполнение, get_interface_input - специальный
входной параметр (см. документацию); любое другое - просто имя поля)</fieldset>
 

				  <fieldset >
                  <legend style="color:red; font-weight:bold">Атрибуты:</legend>
                    <span id="prop_out"></span>
                  </fieldset>		  
<fieldset >
                  <legend style="color:red; font-weight:bold">Значения для полей-списков выбрать из:</legend>
                    <span id=list_out style="display:none"> таблицы:
                      <select name="tab_select" id="tab_select"  >
                        <?=$tab_list1;?>
                    </select>
                      или SQL
                      <textarea name="pole_spisok_sql" id="pole_spisok_sql" cols="95" rows="2" wrap="VIRTUAL" ><?=stripslashes ($struct2['pole_spisok_sql'])?></textarea>
                    </span>
</fieldset>
<fieldset >
                  
                    <legend style="color:red; font-weight:bold">Константы для поля:</legend>
                    <span id="const_out"></span>
  </fieldset>
<fieldset >
                  
                    <legend style="color:red; font-weight:bold">Параметры</legend>
        <span id="properties_out"></span>
  </fieldset>
				  <fieldset><legend style="color:red; font-weight:bold">Вызываемые функции</legend>
                    <table width="100%"  border="0" cellspacing="0" cellpadding="0" >
                      <tr>
                        <td>До обработки поля:</td>
                        <td><input type="text" name="functions_befo" value="<?= $struct2['functions_befo'];?>" /></td>
                        <td >После обработки поля:</td>
                        <td ><input type="text" name="functions_after" value="<?=$struct2['functions_after'];?>" /></td>
                      </tr>
                      <tr>
                        <td nowrap>Перед выводом значения на экран:</td>
                        <td nowrap><input type="text" name="functions_befo_out" value="<?=$struct2['functions_befo_out'];?>"  /></td>
                        <td>Перед удалением записи:</td>
                        <td><input type="text"  name="functions_befo_del" value="<?=$struct2['functions_befo_del'];?>" /></td>
                      </tr>
                    </table>
                  </fieldset>
<?php if ($_POST['row_type']==3)
{//внутренние функции применяемые для всей колонке
	?>
<fieldset >
                    <legend style="color:red; font-weight:bold">Внутренние функции применяемые для всей колонки</legend>
        <?php $f_array=unserialize($struct2['col_function_array']);
		$checked='';
		foreach (["sum"=>"Сумма (sum)","count"=>"Кол-во строк (count)","min"=>"Минимум (min)","max"=>"Максимум (max)"] as $k=>$v) 
			{if (is_array($f_array)) if (in_array($k,$f_array)) $checked='checked'; else $checked='';
			echo '<input name="col_function_array[]" type="checkbox" value="'.$k.'" '.$checked.' />'.$v."\n";
			
			
			}
		
		
		?>
  </fieldset>
<?php } ?>

<div align="right"><input name="del_struct" type="submit" id="del_struct" <?=$save_enable_cols;?> style="font-size: xx-small;color: #FFFFFF;	background-color: red;" value="Удалить выбранную структуру">
                                  </div>
</fieldset>

<!--конец описателя колонок -->
<?php }
?>


<?php //--------------------------------------------------------------------------------------------------------------------------------------
if (isset($_POST['interface_razdel']) && $_POST['interface_razdel']==1)  
		
		{
		$pole_dop_numb=0;
	if (isset($_POST['pole_dop_numb'])) $pole_dop_numb=(int)$_POST['pole_dop_numb'];//номер дополнительного поля (нумерация с 0)
//===============настройки для дополнительного поля до вывода всей таблицы row_type==1
$struct2=simba::queryOneRecord ('select  * from design_tables where table_type=0 and row_type=1 and 	interface_name="'.$_POST['interface_name'].'" order by id limit '.$pole_dop_numb.',1');
//$tab=simba::queryOneRecord("select found_rows() as count_pole_dop_numb");
$tab=simba::queryOneRecord('select count(*) as  count_pole_dop_numb from design_tables where table_type=0 and row_type=1 and 	interface_name="'.$_POST['interface_name'].'"');

$struct2['count_pole_dop_numb']=$tab['count_pole_dop_numb'];//кол-во дополнительных полей

if ($struct0['table_name']>'') $save_enable='';

//генерируем выпадающий список с номерами полей, для выбора
$a=array();
for ($i=0;$i<$struct2['count_pole_dop_numb'];$i++) $a[$i]=$i;

		
		
		 ?>
    <!--Начало дополнительного поля -->
<input name="id" type="hidden" value="<?=$struct2['id'];?>">
<fieldset  style="background-color:#e2e2e2"><legend style="color:red; font-weight:bold">Дополнительные поля в заголовке:</legend>
    Конструируем поле номер:
          <select name="pole_dop_numb" id="pole_dop_numb"   onChange=this.form.submit()>
            <?=simba::getSpValue1 ($a,$a,$pole_dop_numb);?>
          </select>
          <input name="pole_dop_create" type="submit"   id="pole_dop_create" value="Создать новое пустое поле">
          <span class="zagolov"><br>
     Поле получает имя<strong>$pole_dop<?=$pole_dop_numb;?></strong>и будет доступно из PHP (можно вставить в SQL инструкцию)</span>

	  <fieldset >
                    
                      <legend style="color:red; font-weight:bold">Заголовок доп. поля</legend>
                    
				Текст:
                    <textarea name="caption" id="caption" cols="115" rows="1"   ><?php if (isset($design_tables_text_interfase['caption_dop_'.$pole_dop_numb])) echo $design_tables_text_interfase['caption_dop_'.$pole_dop_numb]; 
			 ?></textarea>
                    <br />
                    Порядок вывода
      <input type="text" size="4" name="col_por" id="col_por" value="<?=$struct2['col_por']?>"  >
  </fieldset>
	<fieldset ><legend style="color:red; font-weight:bold">Поле ввода</legend>
Тип:<select id="pole_type" name="pole_type"  onChange="ch_item(this.value,1);">
                          <?=create_pole_item_list($struct2['pole_type']); ?>
                          </select>
  
<br>
Значение (умолчание)
	<textarea name="value" cols="135" rows="1"  id="value" ><?php if (isset($struct2['value'])) echo $struct2['value'];?></textarea>
	</fieldset>

<fieldset >
                          <legend style="color:red; font-weight:bold">Атрибуты:</legend>
                          <span id=prop_out></span>
  </fieldset>
	  
<span id="list_out">
                          <fieldset >
                              <legend style="color:red; font-weight:bold">Значения для полей-списков выбрать из:</legend>
                            <span id=list_out><table width="100%" border="0" cellpadding="0" cellspacing="0" >
                              <tr>
                                <td>Умолчание:<br>SQL</td>
                              <td><textarea name="default_sql" id="default_sql" cols="137" rows="2" wrap="VIRTUAL"  ><?php if (isset($struct2['default_sql'])) echo stripslashes ($struct2['default_sql'])?></textarea></td>
                            </tr>
                              <tr>
                                <td>Таблицы:</td>
                              <td><select name="tab_select" id="tab_select" >
                                <?=$tab_list1?>
                                </select></td>
                            </tr>
                              <tr>
                                <td>или SQL:</td>
                              <td><textarea name="pole_spisok_sql" id="pole_spisok_sql" cols="138" rows="2"  wrap="VIRTUAL" ><?php if(isset($struct2['pole_spisok_sql'])) echo stripslashes ($struct2['pole_spisok_sql'])?></textarea></td>
                            </tr>
                          </table></span>
  </fieldset>
  </span> 	  

<fieldset >
                          <strong>
                            <legend style="color:red; font-weight:bold">Константы:</legend><br>
                    </strong><span id="const_out"></span>
  </fieldset>

<fieldset >
                          
                            <legend style="color:red; font-weight:bold">Параметры</legend>
                    <span id="properties_out"></span>
  </fieldset>
  </fieldset>
<!-- вызываемые функции -->
				  <fieldset  style="background-color:#e2e2e2"><legend style="color:red; font-weight:bold">Вызываемые функции</legend>
            <table width="100%"  border="0" cellpadding="0" cellspacing="0" >
                      <tr>
                        <td nowrap>Перед выводом значения на экран:</td>
                        <td width="72%" nowrap><input type="text" name="functions_befo_out" value="<?=$struct2['functions_befo_out']?>" size="80" /></td>
                        <td width="12%">&nbsp;</td>
                        <td width="12%">&nbsp;</td>
                      </tr>
                      <tr>
                        <td width="4%" nowrap>&nbsp;</td>
                        <td colspan="3" align="right" nowrap>
                        <input type="submit" name="pole_dop_numb_del_b" value="Уничтожить поле"  class="del" /></td>
                      </tr>
                    </table>
  </fieldset>
<!-- конец вызываемые функции -->
<?php }

?><!-- конец Дополнительного поля -->
<input name="save_all" type="submit"  id="save_all" <?=$save_enable;  ?> style="background-color:#00CC66; color:#000000; font-weight:bold" value="Записать все">	  

</form>
<div id="constr_dialog" title="<?=$dialog_title;?>" style="color: red"><h2><?=$dialog_massage?></h2></div>
<script language="JavaScript" type="text/JavaScript">
$( "#constr_dialog" ).dialog({
    resizable: true,
    width: "auto",
    modal: true,
    autoOpen:'<?=$dialog_massage?>'>'',
    buttons: [
        {
            text: "Ok",
            click: function() {
                $( this ).dialog( "close" );
            }
        }
    ]
});
var pole_consts_styles=[],style_sp="",struct2=[],validator=[],selected_validator=[];
<?php 
    //массив данных по всем полям (стили, кол-во элементов, сво-в и т.д.)
echo "pole_consts_styles=unserialize('".str_replace("'","\'",serialize($pole_consts_styles))."');\n";
echo "validator=unserialize('".addslashes(serialize(['validator_list'=>[],'validator_parametrs'=>[]]  ))."');";//получить все что есть валидатору


if (isset($struct2)) {echo "\n struct2=unserialize('".addslashes(serialize($struct2))."');\n";}
 else {echo "\n struct2=[];\n";}

//получить список глобальных настроек
if (!empty($_POST['interface_razdel']))   echo 'ch_item('.$struct2['pole_type'].')';
 ?>


 </script>
